

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Apr 09 22:29:58 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  0088                     	;# 
    53  0089                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73  000B                     _INTCONbits	set	11
    74  0006                     _PORTB	set	6
    75  0001                     _TMR0	set	1
    76  005F                     _GIE	set	95
    77  005D                     _TMR0IE	set	93
    78  005A                     _TMR0IF	set	90
    79  009F                     _ADCON1	set	159
    80  0081                     _OPTION_REGbits	set	129
    81  0086                     _TRISB	set	134
    82                           
    83                           	psect	text0
    84  0000                     __ptext0:	
    85                           ; #config settings
    86                           
    87                           
    88                           ;psect for function _isr
    89  0000                     
    90                           	psect	cinit
    91  0015                     start_initialization:	
    92  0015                     __initialization:	
    93                           
    94                           ; Clear objects allocated to COMMON
    95  0015  01F5               	clrf	__pbssCOMMON& (0+127)
    96  0016  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
    97  0017                     end_of_initialization:	
    98                           ;End of C runtime variable initialization code
    99                           
   100  0017                     __end_of__initialization:	
   101  0017  0183               	clrf	3
   102  0018  120A  118A  2852   	ljmp	_main	;jump to C main() function
   103                           
   104                           	psect	bssCOMMON
   105  0075                     __pbssCOMMON:	
   106  0075                     _sPORTB:	
   107  0075                     	ds	1
   108  0076                     isr@count:	
   109  0076                     	ds	1
   110                           
   111                           	psect	cstackCOMMON
   112  0070                     __pcstackCOMMON:	
   113  0070                     ?_init:	
   114  0070                     ?_isr:	
   115                           ; 0 bytes @ 0x0
   116                           
   117  0070                     ??_isr:	
   118                           ; 0 bytes @ 0x0
   119                           
   120  0070                     ?_main:	
   121                           ; 0 bytes @ 0x0
   122                           
   123                           
   124                           ; 2 bytes @ 0x0
   125  0070                     	ds	5
   126  0075                     ??_init:	
   127  0075                     ??_main:	
   128                           ; 0 bytes @ 0x5
   129                           
   130                           
   131                           	psect	maintext
   132  0052                     __pmaintext:	
   133                           ; 0 bytes @ 0x5
   134 ;;
   135 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   136 ;;
   137 ;; *************** function _main *****************
   138 ;; Defined at:
   139 ;;		line 73 in file "C:\Users\Dinusha\Documents\PICProjects\PIC877AProjects\CProjects\Interrupts01\main.c"
   140 ;; Parameters:    Size  Location     Type
   141 ;;		None
   142 ;; Auto vars:     Size  Location     Type
   143 ;;		None
   144 ;; Return value:  Size  Location     Type
   145 ;;                  2   32[COMMON] int 
   146 ;; Registers used:
   147 ;;		wreg, status,2, status,0, pclath, cstack
   148 ;; Tracked objects:
   149 ;;		On entry : 17F/0
   150 ;;		On exit  : 0/0
   151 ;;		Unchanged: 0/0
   152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   153 ;;      Params:         0       0       0       0       0
   154 ;;      Locals:         0       0       0       0       0
   155 ;;      Temps:          0       0       0       0       0
   156 ;;      Totals:         0       0       0       0       0
   157 ;;Total ram usage:        0 bytes
   158 ;; Hardware stack levels required when called:    2
   159 ;; This function calls:
   160 ;;		_init
   161 ;; This function is called by:
   162 ;;		Startup code after reset
   163 ;; This function uses a non-reentrant model
   164 ;;
   165                           
   166                           
   167                           ;psect for function _main
   168  0052                     _main:	
   169                           
   170                           ;main.c: 79: init();
   171                           
   172                           ;incstack = 0
   173                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   174  0052  120A  118A  203E   	fcall	_init
      +       120A  118A         
   175  0057                     l539:	
   176                           ;main.c: 85: while( 1 ){
   177                           
   178                           
   179                           ;main.c: 104: PORTB = sPORTB.port;
   180  0057  0875               	movf	_sPORTB,w	;volatile
   181  0058  1283               	bcf	3,5	;RP0=0, select bank0
   182  0059  1303               	bcf	3,6	;RP1=0, select bank0
   183  005A  0086               	movwf	6	;volatile
   184  005B  2857               	goto	l539
   185  005C                     __end_of_main:	
   186                           ;main.c: 106: }
   187                           ;main.c: 108: return 0;
   188                           ;	Return value of _main is never used
   189                           
   190                           
   191                           	psect	text1
   192  003E                     __ptext1:	
   193 ;; *************** function _init *****************
   194 ;; Defined at:
   195 ;;		line 24 in file "C:\Users\Dinusha\Documents\PICProjects\PIC877AProjects\CProjects\Interrupts01\main.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;		None
   200 ;; Return value:  Size  Location     Type
   201 ;;		None               void
   202 ;; Registers used:
   203 ;;		wreg, status,2
   204 ;; Tracked objects:
   205 ;;		On entry : 0/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   209 ;;      Params:         0       0       0       0       0
   210 ;;      Locals:         0       0       0       0       0
   211 ;;      Temps:          0       0       0       0       0
   212 ;;      Totals:         0       0       0       0       0
   213 ;;Total ram usage:        0 bytes
   214 ;; Hardware stack levels used:    1
   215 ;; Hardware stack levels required when called:    1
   216 ;; This function calls:
   217 ;;		Nothing
   218 ;; This function is called by:
   219 ;;		_main
   220 ;; This function uses a non-reentrant model
   221 ;;
   222                           
   223                           
   224                           ;psect for function _init
   225  003E                     _init:	
   226                           
   227                           ;main.c: 30: TRISB = 0x00;
   228                           
   229                           ;incstack = 0
   230                           ; Regs used in _init: [wreg+status,2]
   231  003E  1683               	bsf	3,5	;RP0=1, select bank1
   232  003F  1303               	bcf	3,6	;RP1=0, select bank1
   233  0040  0186               	clrf	6	;volatile
   234                           
   235                           ;main.c: 32: ADCON1 = 0x06;
   236  0041  3006               	movlw	6
   237  0042  009F               	movwf	31	;volatile
   238                           
   239                           ;main.c: 33: PORTB = 0x00;
   240  0043  1283               	bcf	3,5	;RP0=0, select bank0
   241  0044  1303               	bcf	3,6	;RP1=0, select bank0
   242  0045  0186               	clrf	6	;volatile
   243                           
   244                           ;main.c: 34: sPORTB.port = 0;
   245  0046  01F5               	clrf	_sPORTB	;volatile
   246                           
   247                           ;main.c: 37: OPTION_REGbits.T0CS = 0;
   248  0047  1683               	bsf	3,5	;RP0=1, select bank1
   249  0048  1303               	bcf	3,6	;RP1=0, select bank1
   250  0049  1281               	bcf	1,5	;volatile
   251                           
   252                           ;main.c: 38: OPTION_REGbits.T0SE = 0;
   253  004A  1201               	bcf	1,4	;volatile
   254                           
   255                           ;main.c: 39: OPTION_REGbits.PSA = 0;
   256  004B  1181               	bcf	1,3	;volatile
   257                           
   258                           ;main.c: 42: OPTION_REGbits.PS0 = 1;
   259  004C  1401               	bsf	1,0	;volatile
   260                           
   261                           ;main.c: 43: OPTION_REGbits.PS1 = 1;
   262  004D  1481               	bsf	1,1	;volatile
   263                           
   264                           ;main.c: 44: OPTION_REGbits.PS2 = 1;
   265  004E  1501               	bsf	1,2	;volatile
   266                           
   267                           ;main.c: 47: INTCONbits.TMR0IE = 1;
   268  004F  168B               	bsf	11,5	;volatile
   269                           
   270                           ;main.c: 49: (GIE = 1);
   271  0050  178B               	bsf	11,7	;volatile
   272  0051  0008               	return
   273  0052                     __end_of_init:	
   274                           
   275                           	psect	text2
   276  001B                     __ptext2:	
   277 ;; *************** function _isr *****************
   278 ;; Defined at:
   279 ;;		line 52 in file "C:\Users\Dinusha\Documents\PICProjects\PIC877AProjects\CProjects\Interrupts01\main.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;		None               void
   286 ;; Registers used:
   287 ;;		wreg, status,2, status,0
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   293 ;;      Params:         0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0
   295 ;;      Temps:          5       0       0       0       0
   296 ;;      Totals:         5       0       0       0       0
   297 ;;Total ram usage:        5 bytes
   298 ;; Hardware stack levels used:    1
   299 ;; This function calls:
   300 ;;		Nothing
   301 ;; This function is called by:
   302 ;;		Interrupt level 1
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           
   307                           ;psect for function _isr
   308  001B                     _isr:	
   309                           
   310                           ;main.c: 54: static uint8_t count = 0;
   311                           ;main.c: 56: if( count == 0 ){
   312  001B  08F6               	movf	isr@count,f
   313  001C  1D03               	skipz
   314  001D  2826               	goto	i1l525
   315                           
   316                           ;main.c: 57: sPORTB.RB2 = ~sPORTB.RB2;
   317  001E  1003               	clrc
   318  001F  1D75               	btfss	_sPORTB,2	;volatile
   319  0020  1403               	setc
   320  0021  1C03               	btfss	3,0
   321  0022  2825               	goto	u2_20
   322  0023  1575               	bsf	_sPORTB,2	;volatile
   323  0024  2826               	goto	i1l525
   324  0025                     u2_20:	
   325  0025  1175               	bcf	_sPORTB,2	;volatile
   326  0026                     i1l525:	
   327                           
   328                           ;main.c: 58: }
   329                           ;main.c: 61: if( TMR0IE && TMR0IF ){
   330  0026  1A8B               	btfsc	11,5	;volatile
   331  0027  1D0B               	btfss	11,2	;volatile
   332  0028  2831               	goto	i1l30
   333                           
   334                           ;main.c: 62: TMR0IF = 0;
   335  0029  110B               	bcf	11,2	;volatile
   336                           
   337                           ;main.c: 63: TMR0 = 0;
   338  002A  1283               	bcf	3,5	;RP0=0, select bank0
   339  002B  1303               	bcf	3,6	;RP1=0, select bank0
   340  002C  0181               	clrf	1	;volatile
   341                           
   342                           ;main.c: 67: count++;
   343  002D  3001               	movlw	1
   344  002E  00F0               	movwf	??_isr
   345  002F  0870               	movf	??_isr,w
   346  0030  07F6               	addwf	isr@count,f
   347  0031                     i1l30:	
   348                           ;main.c: 69: return;
   349                           
   350  0031  0874               	movf	??_isr+4,w
   351  0032  1283               	bcf	3,5	;RP0=0, select bank0
   352  0033  1303               	bcf	3,6	;RP1=0, select bank0
   353  0034  00FF               	movwf	127
   354  0035  0873               	movf	??_isr+3,w
   355  0036  008A               	movwf	10
   356  0037  0872               	movf	??_isr+2,w
   357  0038  0084               	movwf	4
   358  0039  0E71               	swapf	(??_isr+1)^(0+-128),w
   359  003A  0083               	movwf	3
   360  003B  0EFE               	swapf	126,f
   361  003C  0E7E               	swapf	126,w
   362  003D  0009               	retfie
   363  003E                     __end_of_isr:	
   364  007E                     btemp	set	126	;btemp
   365  007E                     wtemp	set	126
   366  007E                     wtemp0	set	126
   367  0080                     wtemp1	set	128
   368  0082                     wtemp2	set	130
   369  0084                     wtemp3	set	132
   370  0086                     wtemp4	set	134
   371  0088                     wtemp5	set	136
   372  007F                     wtemp6	set	127
   373  007E                     ttemp	set	126
   374  007E                     ttemp0	set	126
   375  0081                     ttemp1	set	129
   376  0084                     ttemp2	set	132
   377  0087                     ttemp3	set	135
   378  007F                     ttemp4	set	127
   379  007E                     ltemp	set	126
   380  007E                     ltemp0	set	126
   381  0082                     ltemp1	set	130
   382  0086                     ltemp2	set	134
   383  0080                     ltemp3	set	128
   384                           
   385                           	psect	intentry
   386  0004                     __pintentry:	
   387                           ;incstack = 0
   388                           ; Regs used in _isr: [wreg+status,2+status,0]
   389                           
   390  0004                     interrupt_function:	
   391  007E                     saved_w	set	btemp
   392  0004  00FE               	movwf	btemp
   393  0005  0E03               	swapf	3,w
   394  0006  00F1               	movwf	??_isr+1
   395  0007  0804               	movf	4,w
   396  0008  00F2               	movwf	??_isr+2
   397  0009  080A               	movf	10,w
   398  000A  00F3               	movwf	??_isr+3
   399  000B  1283               	bcf	3,5	;RP0=0, select bank0
   400  000C  1303               	bcf	3,6	;RP1=0, select bank0
   401  000D  087F               	movf	btemp+1,w
   402  000E  00F4               	movwf	??_isr+4
   403  000F  120A  118A  281B   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Apr 09 22:29:58 2014

            __CFG_CP$OFF 0000                      l539 0057                      _GIE 005F  
           __CFG_CPD$OFF 0000                      _isr 001B                      fsr0 0004  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     ?_isr 0070  
                   i1l30 0031                     _TMR0 0001                     u2_20 0025  
                   _main 0052                     _init 003E                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0012  
                   ttemp 007E                     wtemp 007E                    ??_isr 0070  
                  ?_main 0070                    ?_init 0070            __CFG_WDTE$OFF 0000  
                  i1l525 0026                    _PORTB 0006                    _TRISB 0086  
          __CFG_PWRTE$ON 0000                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 0015             __end_of_main 005C  
           __end_of_init 0052                   ??_main 0075                   ??_init 0075  
                 _ADCON1 009F                   _TMR0IE 005D                   _TMR0IF 005A  
                 _sPORTB 0075                   saved_w 007E  __end_of__initialization 0017  
         __pcstackCOMMON 0070           _OPTION_REGbits 0081               __pmaintext 0052  
             __pintentry 0004                  __ptext0 0000                  __ptext1 003E  
                __ptext2 001B             __size_of_isr 0023     end_of_initialization 0017  
    start_initialization 0015              __end_of_isr 003E              __pbssCOMMON 0075  
              ___latbits 0002        interrupt_function 0004            __size_of_main 000A  
          __size_of_init 0014               _INTCONbits 000B                 isr@count 0076  
               intlevel1 0000  
