

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun May 04 23:02:00 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0006                     	;# 
    23  0007                     	;# 
    24  0008                     	;# 
    25  0009                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000D                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0014                     	;# 
    38  0015                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0017                     	;# 
    42  0018                     	;# 
    43  0019                     	;# 
    44  001A                     	;# 
    45  001B                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001D                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  0081                     	;# 
    52  0085                     	;# 
    53  0086                     	;# 
    54  0087                     	;# 
    55  0088                     	;# 
    56  0089                     	;# 
    57  008C                     	;# 
    58  008D                     	;# 
    59  008E                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0093                     	;# 
    63  0094                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  009F                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  010E                     	;# 
    73  010F                     	;# 
    74  018C                     	;# 
    75  018D                     	;# 
    76  000B                     _INTCONbits	set	11
    77  0006                     _PORTB	set	6
    78  0007                     _PORTC	set	7
    79  0001                     _TMR0	set	1
    80  005F                     _GIE	set	95
    81  0031                     _RB1	set	49
    82  0032                     _RB2	set	50
    83  003A                     _RC2	set	58
    84  005D                     _TMR0IE	set	93
    85  005A                     _TMR0IF	set	90
    86  009F                     _ADCON1	set	159
    87  0081                     _OPTION_REGbits	set	129
    88  0086                     _TRISB	set	134
    89  0086                     _TRISBbits	set	134
    90  0087                     _TRISC	set	135
    91                           
    92                           	psect	text0
    93  0000                     __ptext0:	
    94                           ; #config settings
    95                           
    96                           
    97                           ;psect for function _isr
    98  0000                     
    99                           	psect	cinit
   100  0015                     start_initialization:	
   101  0015                     __initialization:	
   102                           
   103                           ; Clear objects allocated to BITCOMMON
   104  0015  01F6               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   105                           
   106                           ; Clear objects allocated to COMMON
   107  0016  01F7               	clrf	__pbssCOMMON& (0+127)
   108  0017  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   109  0018                     end_of_initialization:	
   110                           ;End of C runtime variable initialization code
   111                           
   112  0018                     __end_of__initialization:	
   113  0018  0183               	clrf	3
   114  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   115                           
   116                           	psect	bitbssCOMMON
   117  03B0                     __pbitbssCOMMON:	
   118  03B0                     _update_duty:	
   119  03B0                     	ds	1
   120  03B1                     _update_state:	
   121  03B1                     	ds	1
   122                           
   123                           	psect	bssCOMMON
   124  0077                     __pbssCOMMON:	
   125  0077                     _ticks:	
   126  0077                     	ds	2
   127                           
   128                           	psect	cstackCOMMON
   129  0070                     __pcstackCOMMON:	
   130  0070                     ?_init:	
   131  0070                     ?_isr:	
   132                           ; 0 bytes @ 0x0
   133                           
   134  0070                     ??_isr:	
   135                           ; 0 bytes @ 0x0
   136                           
   137  0070                     ?_debounce_lo:	
   138                           ; 0 bytes @ 0x0
   139                           
   140  0070                     ?_main:	
   141                           ; 1 bytes @ 0x0
   142                           
   143                           
   144                           ; 2 bytes @ 0x0
   145  0070                     	ds	4
   146  0074                     ??_init:	
   147  0074                     ??_debounce_lo:	
   148                           ; 0 bytes @ 0x4
   149                           
   150                           
   151                           ; 0 bytes @ 0x4
   152  0074                     	ds	2
   153                           
   154                           	psect	cstackBANK0
   155  0020                     __pcstackBANK0:	
   156  0020                     debounce_lo@prt:	
   157                           
   158                           ; 1 bytes @ 0x0
   159  0020                     	ds	1
   160  0021                     debounce_lo@count:	
   161                           
   162                           ; 1 bytes @ 0x1
   163  0021                     	ds	1
   164  0022                     ??_main:	
   165                           
   166                           ; 0 bytes @ 0x2
   167  0022                     	ds	2
   168  0024                     main@delay:	
   169                           
   170                           ; 2 bytes @ 0x4
   171  0024                     	ds	2
   172  0026                     main@increment:	
   173                           
   174                           ; 2 bytes @ 0x6
   175  0026                     	ds	2
   176  0028                     main@step_angle:	
   177                           
   178                           ; 1 bytes @ 0x8
   179  0028                     	ds	1
   180  0029                     main@button_pressed:	
   181                           
   182                           ; 1 bytes @ 0x9
   183  0029                     	ds	1
   184  002A                     main@i:	
   185                           
   186                           ; 2 bytes @ 0xA
   187  002A                     	ds	2
   188                           
   189                           	psect	maintext
   190  001C                     __pmaintext:	
   191 ;;
   192 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   193 ;;
   194 ;; *************** function _main *****************
   195 ;; Defined at:
   196 ;;		line 143 in file "C:\Users\Dinusha\Documents\PICProjects\PIC877AProjects\CProjects\Servo\main.c"
   197 ;; Parameters:    Size  Location     Type
   198 ;;		None
   199 ;; Auto vars:     Size  Location     Type
   200 ;;  i               2   10[BANK0 ] int 
   201 ;;  increment       2    6[BANK0 ] int 
   202 ;;  delay           2    4[BANK0 ] int 
   203 ;;  button_press    1    9[BANK0 ] unsigned char 
   204 ;;  step_angle      1    8[BANK0 ] unsigned char 
   205 ;; Return value:  Size  Location     Type
   206 ;;                  2   67[COMMON] int 
   207 ;; Registers used:
   208 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   209 ;; Tracked objects:
   210 ;;		On entry : 17F/0
   211 ;;		On exit  : 0/0
   212 ;;		Unchanged: 0/0
   213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   214 ;;      Params:         0       0       0       0       0
   215 ;;      Locals:         0       8       0       0       0
   216 ;;      Temps:          0       2       0       0       0
   217 ;;      Totals:         0      10       0       0       0
   218 ;;Total ram usage:       10 bytes
   219 ;; Hardware stack levels required when called:    2
   220 ;; This function calls:
   221 ;;		_debounce_lo
   222 ;;		_init
   223 ;; This function is called by:
   224 ;;		Startup code after reset
   225 ;; This function uses a non-reentrant model
   226 ;;
   227                           
   228                           
   229                           ;psect for function _main
   230  001C                     _main:	
   231                           
   232                           ;main.c: 146: uint8_t button_pressed = 0;
   233                           
   234                           ;incstack = 0
   235                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   236  001C  1283               	bcf	3,5	;RP0=0, select bank0
   237  001D  1303               	bcf	3,6	;RP1=0, select bank0
   238  001E  01A9               	clrf	main@button_pressed
   239                           
   240                           ;main.c: 149: int delay = 1000;
   241  001F  30E8               	movlw	232
   242  0020  00A4               	movwf	main@delay
   243  0021  3003               	movlw	3
   244  0022  00A5               	movwf	main@delay+1
   245                           
   246                           ;main.c: 150: uint8_t step_angle = 10;
   247  0023  300A               	movlw	10
   248  0024  00A2               	movwf	??_main
   249  0025  0822               	movf	??_main,w
   250  0026  00A8               	movwf	main@step_angle
   251                           
   252                           ;main.c: 151: int increment = 1;
   253  0027  3001               	movlw	1
   254  0028  00A6               	movwf	main@increment
   255  0029  3000               	movlw	0
   256  002A  00A7               	movwf	main@increment+1
   257                           
   258                           ;main.c: 152: int i = 0;
   259  002B  01AA               	clrf	main@i
   260  002C  01AB               	clrf	main@i+1
   261                           
   262                           ;main.c: 154: init();
   263  002D  120A  118A  2101   	fcall	_init
      +       120A  118A         
   264                           
   265                           ;main.c: 179: RC2 = 0;
   266  0032  1283               	bcf	3,5	;RP0=0, select bank0
   267  0033  1303               	bcf	3,6	;RP1=0, select bank0
   268  0034  1107               	bcf	7,2	;volatile
   269                           
   270                           ;main.c: 180: RB2 = 0;
   271  0035  1106               	bcf	6,2	;volatile
   272                           
   273                           ;main.c: 183: (GIE = 1);
   274  0036  178B               	bsf	11,7	;volatile
   275                           
   276                           ;main.c: 185: TMR0 = 0;
   277  0037  0181               	clrf	1	;volatile
   278  0038                     l823:	
   279                           ;main.c: 187: while( 1 ){
   280                           
   281                           
   282                           ;main.c: 192: if( !button_pressed && debounce_lo( RB1 ) ){
   283  0038  1283               	bcf	3,5	;RP0=0, select bank0
   284  0039  1303               	bcf	3,6	;RP1=0, select bank0
   285  003A  08A9               	movf	main@button_pressed,f
   286  003B  1D03               	skipz
   287  003C  2863               	goto	l69
   288  003D  3000               	movlw	0
   289  003E  1886               	btfsc	6,1	;volatile
   290  003F  3001               	movlw	1
   291  0040  120A  118A  20BD   	fcall	_debounce_lo
      +       120A  118A         
   292  0045  3A00               	xorlw	0
   293  0046  1903               	skipnz
   294  0047  2863               	goto	l69
   295                           
   296                           ;main.c: 194: RB2 = 0x01;
   297  0048  1283               	bcf	3,5	;RP0=0, select bank0
   298  0049  1303               	bcf	3,6	;RP1=0, select bank0
   299  004A  1506               	bsf	6,2	;volatile
   300                           
   301                           ;main.c: 197: button_pressed = 1;
   302  004B  01A9               	clrf	main@button_pressed
   303  004C  0AA9               	incf	main@button_pressed,f
   304                           
   305                           ;main.c: 202: i++;
   306  004D  3001               	movlw	1
   307  004E  07AA               	addwf	main@i,f
   308  004F  1803               	skipnc
   309  0050  0AAB               	incf	main@i+1,f
   310  0051  3000               	movlw	0
   311  0052  07AB               	addwf	main@i+1,f
   312                           
   313                           ;main.c: 203: if( i > 3 ){
   314  0053  082B               	movf	main@i+1,w
   315  0054  3A80               	xorlw	128
   316  0055  00FF               	movwf	127
   317  0056  3080               	movlw	128
   318  0057  027F               	subwf	127,w
   319  0058  1D03               	skipz
   320  0059  285C               	goto	u375
   321  005A  3004               	movlw	4
   322  005B  022A               	subwf	main@i,w
   323  005C                     u375:	
   324  005C  1C03               	skipc
   325  005D  2874               	goto	l839
   326                           
   327                           ;main.c: 204: i = 0;
   328  005E  1283               	bcf	3,5	;RP0=0, select bank0
   329  005F  1303               	bcf	3,6	;RP1=0, select bank0
   330  0060  01AA               	clrf	main@i
   331  0061  01AB               	clrf	main@i+1
   332                           
   333                           ;main.c: 205: }
   334                           ;main.c: 206: }else{
   335  0062  2874               	goto	l839
   336  0063                     l69:	
   337                           
   338                           ;main.c: 207: RB2 = 0x00;
   339  0063  1283               	bcf	3,5	;RP0=0, select bank0
   340  0064  1303               	bcf	3,6	;RP1=0, select bank0
   341  0065  1106               	bcf	6,2	;volatile
   342                           
   343                           ;main.c: 208: if(!debounce_lo( RB1 ))
   344  0066  3000               	movlw	0
   345  0067  1886               	btfsc	6,1	;volatile
   346  0068  3001               	movlw	1
   347  0069  120A  118A  20BD   	fcall	_debounce_lo
      +       120A  118A         
   348  006E  3800               	iorlw	0
   349  006F  1D03               	skipz
   350  0070  2874               	goto	l839
   351                           
   352                           ;main.c: 210: button_pressed = 0;
   353  0071  1283               	bcf	3,5	;RP0=0, select bank0
   354  0072  1303               	bcf	3,6	;RP1=0, select bank0
   355  0073  01A9               	clrf	main@button_pressed
   356  0074                     l839:	
   357                           
   358                           ;main.c: 211: }
   359                           ;main.c: 217: if( update_state ){
   360  0074  1CF6               	btfss	_update_state/(0+8),_update_state& (0+7)
   361  0075  2838               	goto	l823
   362                           
   363                           ;main.c: 221: RC2 = 1;
   364  0076  1283               	bcf	3,5	;RP0=0, select bank0
   365  0077  1303               	bcf	3,6	;RP1=0, select bank0
   366  0078  1507               	bsf	7,2	;volatile
   367                           
   368                           ;main.c: 230: if(i == 0){
   369  0079  082B               	movf	main@i+1,w
   370  007A  042A               	iorwf	main@i,w
   371  007B  1D03               	skipz
   372  007C  2887               	goto	l847
   373                           
   374                           ;main.c: 231: _delay((unsigned long)((500)*(20000000/4000000.0)));
   375  007D  3004               	movlw	4
   376  007E  00A3               	movwf	??_main+1
   377  007F  303D               	movlw	61
   378  0080  00A2               	movwf	??_main
   379  0081                     u447:	
   380  0081  0BA2               	decfsz	??_main,f
   381  0082  2881               	goto	u447
   382  0083  0BA3               	decfsz	??_main+1,f
   383  0084  2881               	goto	u447
   384  0085  2886               	nop2
   385                           
   386                           ;main.c: 232: }else if( i == 1 ){
   387  0086  28B8               	goto	l859
   388  0087                     l847:	
   389  0087  3001               	movlw	1
   390  0088  1283               	bcf	3,5	;RP0=0, select bank0
   391  0089  1303               	bcf	3,6	;RP1=0, select bank0
   392  008A  062A               	xorwf	main@i,w
   393  008B  042B               	iorwf	main@i+1,w
   394  008C  1D03               	skipz
   395  008D  2897               	goto	l851
   396                           
   397                           ;main.c: 233: _delay((unsigned long)((1000)*(20000000/4000000.0)));
   398  008E  3007               	movlw	7
   399  008F  00A3               	movwf	??_main+1
   400  0090  307D               	movlw	125
   401  0091  00A2               	movwf	??_main
   402  0092                     u457:	
   403  0092  0BA2               	decfsz	??_main,f
   404  0093  2892               	goto	u457
   405  0094  0BA3               	decfsz	??_main+1,f
   406  0095  2892               	goto	u457
   407                           
   408                           ;main.c: 234: }else if( i == 2 ){
   409  0096  28B8               	goto	l859
   410  0097                     l851:	
   411  0097  3002               	movlw	2
   412  0098  1283               	bcf	3,5	;RP0=0, select bank0
   413  0099  1303               	bcf	3,6	;RP1=0, select bank0
   414  009A  062A               	xorwf	main@i,w
   415  009B  042B               	iorwf	main@i+1,w
   416  009C  1D03               	skipz
   417  009D  28A8               	goto	l855
   418                           
   419                           ;main.c: 235: _delay((unsigned long)((1500)*(20000000/4000000.0)));
   420  009E  300A               	movlw	10
   421  009F  00A3               	movwf	??_main+1
   422  00A0  30BC               	movlw	188
   423  00A1  00A2               	movwf	??_main
   424  00A2                     u467:	
   425  00A2  0BA2               	decfsz	??_main,f
   426  00A3  28A2               	goto	u467
   427  00A4  0BA3               	decfsz	??_main+1,f
   428  00A5  28A2               	goto	u467
   429  00A6  0000               	nop
   430                           
   431                           ;main.c: 236: }else if( i == 3 ){
   432  00A7  28B8               	goto	l859
   433  00A8                     l855:	
   434  00A8  3003               	movlw	3
   435  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   436  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   437  00AB  062A               	xorwf	main@i,w
   438  00AC  042B               	iorwf	main@i+1,w
   439  00AD  1D03               	skipz
   440  00AE  28B8               	goto	l859
   441                           
   442                           ;main.c: 237: _delay((unsigned long)((2000)*(20000000/4000000.0)));
   443  00AF  300D               	movlw	13
   444  00B0  00A3               	movwf	??_main+1
   445  00B1  30FB               	movlw	251
   446  00B2  00A2               	movwf	??_main
   447  00B3                     u477:	
   448  00B3  0BA2               	decfsz	??_main,f
   449  00B4  28B3               	goto	u477
   450  00B5  0BA3               	decfsz	??_main+1,f
   451  00B6  28B3               	goto	u477
   452  00B7  28B8               	nop2
   453  00B8                     l859:	
   454                           
   455                           ;main.c: 238: }
   456                           ;main.c: 239: RC2 = 0;
   457  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   458  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   459  00BA  1107               	bcf	7,2	;volatile
   460                           
   461                           ;main.c: 255: update_state = 0;
   462  00BB  10F6               	bcf	_update_state/(0+8),_update_state& (0+7)
   463                           
   464                           ;main.c: 257: }else{
   465  00BC  2838               	goto	l823
   466  00BD                     __end_of_main:	
   467                           ;main.c: 259: }
   468                           ;main.c: 260: }
   469                           ;main.c: 262: return 0;
   470                           ;	Return value of _main is never used
   471                           
   472                           
   473                           	psect	text1
   474  0101                     __ptext1:	
   475 ;; *************** function _init *****************
   476 ;; Defined at:
   477 ;;		line 20 in file "C:\Users\Dinusha\Documents\PICProjects\PIC877AProjects\CProjects\Servo\main.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;		None               void
   484 ;; Registers used:
   485 ;;		wreg, status,2
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    1
   498 ;; This function calls:
   499 ;;		Nothing
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _init
   507  0101                     _init:	
   508                           
   509                           ;main.c: 28: ADCON1 = 0x06;
   510                           
   511                           ;incstack = 0
   512                           ; Regs used in _init: [wreg+status,2]
   513  0101  3006               	movlw	6
   514  0102  1683               	bsf	3,5	;RP0=1, select bank1
   515  0103  1303               	bcf	3,6	;RP1=0, select bank1
   516  0104  009F               	movwf	31	;volatile
   517                           
   518                           ;main.c: 31: TRISC = 0x00;
   519  0105  0187               	clrf	7	;volatile
   520                           
   521                           ;main.c: 32: PORTC = 0x00;
   522  0106  1283               	bcf	3,5	;RP0=0, select bank0
   523  0107  1303               	bcf	3,6	;RP1=0, select bank0
   524  0108  0187               	clrf	7	;volatile
   525                           
   526                           ;main.c: 34: TRISB = 0x00;
   527  0109  1683               	bsf	3,5	;RP0=1, select bank1
   528  010A  1303               	bcf	3,6	;RP1=0, select bank1
   529  010B  0186               	clrf	6	;volatile
   530                           
   531                           ;main.c: 35: TRISBbits.TRISB1 = 1;
   532  010C  1486               	bsf	6,1	;volatile
   533                           
   534                           ;main.c: 36: PORTB = 0x00;
   535  010D  1283               	bcf	3,5	;RP0=0, select bank0
   536  010E  1303               	bcf	3,6	;RP1=0, select bank0
   537  010F  0186               	clrf	6	;volatile
   538                           
   539                           ;main.c: 72: OPTION_REGbits.T0CS = 0;
   540  0110  1683               	bsf	3,5	;RP0=1, select bank1
   541  0111  1303               	bcf	3,6	;RP1=0, select bank1
   542  0112  1281               	bcf	1,5	;volatile
   543                           
   544                           ;main.c: 73: OPTION_REGbits.T0SE = 0;
   545  0113  1201               	bcf	1,4	;volatile
   546                           
   547                           ;main.c: 74: OPTION_REGbits.PSA = 0;
   548  0114  1181               	bcf	1,3	;volatile
   549                           
   550                           ;main.c: 77: OPTION_REGbits.PS0 = 0;
   551  0115  1001               	bcf	1,0	;volatile
   552                           
   553                           ;main.c: 78: OPTION_REGbits.PS1 = 0;
   554  0116  1081               	bcf	1,1	;volatile
   555                           
   556                           ;main.c: 79: OPTION_REGbits.PS2 = 0;
   557  0117  1101               	bcf	1,2	;volatile
   558                           
   559                           ;main.c: 81: INTCONbits.TMR0IE = 1;
   560  0118  168B               	bsf	11,5	;volatile
   561  0119  0008               	return
   562  011A                     __end_of_init:	
   563                           
   564                           	psect	text2
   565  00BD                     __ptext2:	
   566 ;; *************** function _debounce_lo *****************
   567 ;; Defined at:
   568 ;;		line 114 in file "C:\Users\Dinusha\Documents\PICProjects\PIC877AProjects\CProjects\Servo\main.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;  prt             1    wreg     unsigned char 
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  prt             1    0[BANK0 ] unsigned char 
   573 ;;  count           1    1[BANK0 ] unsigned char 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      unsigned char 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   583 ;;      Params:         0       0       0       0       0
   584 ;;      Locals:         0       2       0       0       0
   585 ;;      Temps:          2       0       0       0       0
   586 ;;      Totals:         2       2       0       0       0
   587 ;;Total ram usage:        4 bytes
   588 ;; Hardware stack levels used:    1
   589 ;; Hardware stack levels required when called:    1
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           
   598                           ;psect for function _debounce_lo
   599  00BD                     _debounce_lo:	
   600                           
   601                           ;incstack = 0
   602                           ; Regs used in _debounce_lo: [wreg+status,2+status,0]
   603                           ;debounce_lo@prt stored from wreg
   604  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   605  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   606  00BF  00A0               	movwf	debounce_lo@prt
   607                           
   608                           ;main.c: 116: uint8_t count = 0;
   609  00C0  01A1               	clrf	debounce_lo@count
   610                           
   611                           ;main.c: 118: if( !prt ){
   612  00C1  08A0               	movf	debounce_lo@prt,f
   613  00C2  1903               	btfsc	3,2
   614  00C3  28D3               	goto	l50
   615  00C4  28E0               	goto	l799
   616  00C5                     l787:	
   617                           ;main.c: 119: while( !prt && count < 10 ){
   618                           
   619                           
   620                           ;main.c: 120: _delay((unsigned long)((1)*(20000000/4000.0)));
   621  00C5  3007               	movlw	7
   622  00C6  00F5               	movwf	??_debounce_lo+1
   623  00C7  307D               	movlw	125
   624  00C8  00F4               	movwf	??_debounce_lo
   625  00C9                     u487:	
   626  00C9  0BF4               	decfsz	??_debounce_lo,f
   627  00CA  28C9               	goto	u487
   628  00CB  0BF5               	decfsz	??_debounce_lo+1,f
   629  00CC  28C9               	goto	u487
   630                           
   631                           ;main.c: 121: count++;
   632  00CD  3001               	movlw	1
   633  00CE  00F4               	movwf	??_debounce_lo
   634  00CF  0874               	movf	??_debounce_lo,w
   635  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   636  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   637  00D2  07A1               	addwf	debounce_lo@count,f
   638  00D3                     l50:	
   639  00D3  08A0               	movf	debounce_lo@prt,f
   640  00D4  1D03               	skipz
   641  00D5  28DA               	goto	l793
   642  00D6  300A               	movlw	10
   643  00D7  0221               	subwf	debounce_lo@count,w
   644  00D8  1C03               	skipc
   645  00D9  28C5               	goto	l787
   646  00DA                     l793:	
   647                           
   648                           ;main.c: 122: }
   649                           ;main.c: 123: if( count == 10 )
   650  00DA  0821               	movf	debounce_lo@count,w
   651  00DB  3A0A               	xorlw	10
   652  00DC  1D03               	skipz
   653  00DD  28E0               	goto	l799
   654                           
   655                           ;main.c: 124: return 1;
   656  00DE  3001               	movlw	1
   657  00DF  0008               	return
   658  00E0                     l799:	
   659                           
   660                           ;main.c: 125: }
   661                           ;main.c: 126: return 0;
   662  00E0  3000               	movlw	0
   663  00E1  0008               	return
   664  00E2                     __end_of_debounce_lo:	
   665                           
   666                           	psect	text3
   667  00E2                     __ptext3:	
   668 ;; *************** function _isr *****************
   669 ;; Defined at:
   670 ;;		line 93 in file "C:\Users\Dinusha\Documents\PICProjects\PIC877AProjects\CProjects\Servo\main.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;		None
   675 ;; Return value:  Size  Location     Type
   676 ;;		None               void
   677 ;; Registers used:
   678 ;;		wreg, status,2
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   684 ;;      Params:         0       0       0       0       0
   685 ;;      Locals:         0       0       0       0       0
   686 ;;      Temps:          4       0       0       0       0
   687 ;;      Totals:         4       0       0       0       0
   688 ;;Total ram usage:        4 bytes
   689 ;; Hardware stack levels used:    1
   690 ;; This function calls:
   691 ;;		Nothing
   692 ;; This function is called by:
   693 ;;		Interrupt level 1
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           
   698                           ;psect for function _isr
   699  00E2                     _isr:	
   700                           
   701                           ;main.c: 95: if( TMR0IE && TMR0IF ){
   702  00E2  1A8B               	btfsc	11,5	;volatile
   703  00E3  1D0B               	btfss	11,2	;volatile
   704  00E4  28F6               	goto	i1l46
   705                           
   706                           ;main.c: 96: TMR0IF = 0;
   707  00E5  110B               	bcf	11,2	;volatile
   708                           
   709                           ;main.c: 97: TMR0 = 0;
   710  00E6  0181               	clrf	1	;volatile
   711                           
   712                           ;main.c: 98: update_duty = 1;
   713  00E7  1476               	bsf	_update_duty/(0+8),_update_duty& (0+7)
   714                           
   715                           ;main.c: 100: ++ticks;
   716  00E8  3001               	movlw	1
   717  00E9  07F7               	addwf	_ticks,f
   718  00EA  1803               	skipnc
   719  00EB  0AF8               	incf	_ticks+1,f
   720  00EC  3000               	movlw	0
   721  00ED  07F8               	addwf	_ticks+1,f
   722                           
   723                           ;main.c: 104: if( ticks == 100 ){
   724  00EE  3064               	movlw	100
   725  00EF  0677               	xorwf	_ticks,w
   726  00F0  0478               	iorwf	_ticks+1,w
   727  00F1  1D03               	skipz
   728  00F2  28F6               	goto	i1l46
   729                           
   730                           ;main.c: 105: update_state = 1;
   731  00F3  14F6               	bsf	_update_state/(0+8),_update_state& (0+7)
   732                           
   733                           ;main.c: 106: ticks = 0;
   734  00F4  01F7               	clrf	_ticks
   735  00F5  01F8               	clrf	_ticks+1
   736  00F6                     i1l46:	
   737                           ;main.c: 107: }
   738                           ;main.c: 110: return;
   739                           
   740  00F6  0873               	movf	??_isr+3,w
   741  00F7  00FF               	movwf	127
   742  00F8  0872               	movf	??_isr+2,w
   743  00F9  008A               	movwf	10
   744  00FA  0871               	movf	??_isr+1,w
   745  00FB  0084               	movwf	4
   746  00FC  0E70               	swapf	??_isr^(0+-128),w
   747  00FD  0083               	movwf	3
   748  00FE  0EFE               	swapf	126,f
   749  00FF  0E7E               	swapf	126,w
   750  0100  0009               	retfie
   751  0101                     __end_of_isr:	
   752  007E                     btemp	set	126	;btemp
   753  007E                     wtemp	set	126
   754  007E                     wtemp0	set	126
   755  0080                     wtemp1	set	128
   756  0082                     wtemp2	set	130
   757  0084                     wtemp3	set	132
   758  0086                     wtemp4	set	134
   759  0088                     wtemp5	set	136
   760  007F                     wtemp6	set	127
   761  007E                     ttemp	set	126
   762  007E                     ttemp0	set	126
   763  0081                     ttemp1	set	129
   764  0084                     ttemp2	set	132
   765  0087                     ttemp3	set	135
   766  007F                     ttemp4	set	127
   767  007E                     ltemp	set	126
   768  007E                     ltemp0	set	126
   769  0082                     ltemp1	set	130
   770  0086                     ltemp2	set	134
   771  0080                     ltemp3	set	128
   772                           
   773                           	psect	intentry
   774  0004                     __pintentry:	
   775                           ;incstack = 0
   776                           ; Regs used in _isr: [wreg+status,2]
   777                           
   778  0004                     interrupt_function:	
   779  007E                     saved_w	set	btemp
   780  0004  00FE               	movwf	btemp
   781  0005  0E03               	swapf	3,w
   782  0006  00F0               	movwf	??_isr
   783  0007  0804               	movf	4,w
   784  0008  00F1               	movwf	??_isr+1
   785  0009  080A               	movf	10,w
   786  000A  00F2               	movwf	??_isr+2
   787  000B  1283               	bcf	3,5	;RP0=0, select bank0
   788  000C  1303               	bcf	3,6	;RP1=0, select bank0
   789  000D  087F               	movf	btemp+1,w
   790  000E  00F3               	movwf	??_isr+3
   791  000F  120A  118A  28E2   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80     12      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_debounce_lo

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_debounce_lo

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     343
                                              2 BANK0     10    10      0
                        _debounce_lo
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debounce_lo                                          4     4      0     130
                                              4 COMMON     2     2      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _debounce_lo
   _init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun May 04 23:02:00 2014

            _update_duty 03B0             _update_state 03B1              __CFG_CP$OFF 0000  
                     l50 00D3                       l69 0063                      l823 0038  
                    l851 0097                      l855 00A8                      l847 0087  
                    l839 0074                      l793 00DA                      l787 00C5  
                    l859 00B8                      l799 00E0                      _GIE 005F  
                    _RB1 0031                      _RB2 0032                      _RC2 003A  
           __CFG_CPD$OFF 0000                      u447 0081                      u375 005C  
                    u457 0092                      u467 00A2                      u477 00B3  
                    u487 00C9                      _isr 00E2                      fsr0 0004  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     ?_isr 0070  
                   i1l46 00F6                     _TMR0 0001                     _main 001C  
                   _init 0101                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0012                     ttemp 007E  
                   wtemp 007E                    ??_isr 0070                    ?_main 0070  
                  ?_init 0070            __CFG_WDTE$OFF 0000                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
          __CFG_PWRTE$ON 0000                    _ticks 0077                    main@i 002A  
         __pbitbssCOMMON 03B0                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
     main@button_pressed 0029                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F     __size_of_debounce_lo 0025  
        __initialization 0015             __end_of_main 00BD             __end_of_init 011A  
                 ??_main 0022                   ??_init 0074                   _ADCON1 009F  
          main@increment 0026                   _TMR0IE 005D                   _TMR0IF 005A  
                 saved_w 007E  __end_of__initialization 0018           __pcstackCOMMON 0070  
         _OPTION_REGbits 0081               __pmaintext 001C               __pintentry 0004  
                __ptext0 0000                  __ptext1 0101                  __ptext2 00BD  
                __ptext3 00E2             __size_of_isr 001F     end_of_initialization 0018  
          ??_debounce_lo 0074           main@step_angle 0028                _TRISBbits 0086  
    __end_of_debounce_lo 00E2      start_initialization 0015              __end_of_isr 0101  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
       debounce_lo@count 0021              _debounce_lo 00BD        interrupt_function 0004  
              main@delay 0024            __size_of_main 00A1            __size_of_init 0019  
             _INTCONbits 000B           debounce_lo@prt 0020                 intlevel1 0000  
           ?_debounce_lo 0070  
