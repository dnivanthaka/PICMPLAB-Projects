

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun Mar 09 20:40:36 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     	;# 
    29  0001                     	;# 
    30  0002                     	;# 
    31  0003                     	;# 
    32  0004                     	;# 
    33  0005                     	;# 
    34  0006                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  000E                     	;# 
    39  000E                     	;# 
    40  000F                     	;# 
    41  0010                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0015                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001F                     	;# 
    52  0081                     	;# 
    53  0085                     	;# 
    54  0086                     	;# 
    55  008C                     	;# 
    56  008E                     	;# 
    57  0092                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009B                     	;# 
    62  009C                     	;# 
    63  009D                     	;# 
    64  009F                     	;# 
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  008C                     	;# 
    93  008E                     	;# 
    94  0092                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009F                     	;# 
   102                           
   103                           	psect	strings
   104  0001                     __pstrings:	
   105  0001                     stringtab:	
   106  0001                     __stringtab:	
   107                           
   108                           ;	String table - string pointers are 1 byte each
   109  0001  1BFF               	btfsc	btemp+1,7
   110  0002  280B               	ljmp	stringcode
   111  0003  1383               	bcf	3,7
   112  0004  187F               	btfsc	btemp+1,0
   113  0005  1783               	bsf	3,7
   114  0006  0800               	movf	0,w
   115  0007  0A84               	incf	4,f
   116  0008  1903               	skipnz
   117  0009  0AFF               	incf	btemp+1,f
   118  000A  0008               	return
   119  000B                     stringcode:	
   120  000B                     stringdir:	
   121  000B  3000               	movlw	high stringdir
   122  000C  008A               	movwf	10
   123  000D  0804               	movf	4,w
   124  000E  0A84               	incf	4,f
   125  000F  0782               	addwf	2,f
   126  0010                     __stringbase:	
   127  0010  3400               	retlw	0
   128  0011                     __end_of__stringtab:	
   129  0011                     _dpowers:	
   130  0011  3401               	retlw	1
   131  0012  3400               	retlw	0
   132  0013  340A               	retlw	10
   133  0014  3400               	retlw	0
   134  0015  3464               	retlw	100
   135  0016  3400               	retlw	0
   136  0017  34E8               	retlw	232
   137  0018  3403               	retlw	3
   138  0019  3410               	retlw	16
   139  001A  3427               	retlw	39
   140  001B                     __end_of_dpowers:	
   141  001F                     _CMCON	set	31
   142  0005                     _PORTAbits	set	5
   143  0006                     _PORTB	set	6
   144  0029                     _RA1	set	41
   145  0033                     _RB3	set	51
   146  0034                     _RB4	set	52
   147  0035                     _RB5	set	53
   148  0036                     _RB6	set	54
   149  0085                     _TRISA	set	133
   150  0086                     _TRISB	set	134
   151  001B                     __stringdata:	
   152  001B                     STR_2:	
   153  001B  3454               	retlw	84	;'T'
   154  001C  3465               	retlw	101	;'e'
   155  001D  3478               	retlw	120	;'x'
   156  001E  3474               	retlw	116	;'t'
   157  001F  3420               	retlw	32	;' '
   158  0020  340A               	retlw	10
   159  0021  3444               	retlw	68	;'D'
   160  0022  3469               	retlw	105	;'i'
   161  0023  3473               	retlw	115	;'s'
   162  0024  3470               	retlw	112	;'p'
   163  0025  346C               	retlw	108	;'l'
   164  0026  3461               	retlw	97	;'a'
   165  0027  3479               	retlw	121	;'y'
   166  0028  3432               	retlw	50	;'2'
   167  0029  3400               	retlw	0
   168  002A                     STR_4:	
   169  002A  3443               	retlw	67	;'C'
   170  002B  346F               	retlw	111	;'o'
   171  002C  3475               	retlw	117	;'u'
   172  002D  346E               	retlw	110	;'n'
   173  002E  3474               	retlw	116	;'t'
   174  002F  3465               	retlw	101	;'e'
   175  0030  3472               	retlw	114	;'r'
   176  0031  3420               	retlw	32	;' '
   177  0032  343A               	retlw	58	;':'
   178  0033  3425               	retlw	37	;'%'
   179  0034  3464               	retlw	100	;'d'
   180  0035  3400               	retlw	0
   181  0036                     STR_1:	
   182  0036  3443               	retlw	67	;'C'
   183  0037  346F               	retlw	111	;'o'
   184  0038  3475               	retlw	117	;'u'
   185  0039  346E               	retlw	110	;'n'
   186  003A  3474               	retlw	116	;'t'
   187  003B  3469               	retlw	105	;'i'
   188  003C  346E               	retlw	110	;'n'
   189  003D  3467               	retlw	103	;'g'
   190  003E  343A               	retlw	58	;':'
   191  003F  3420               	retlw	32	;' '
   192  0040  3400               	retlw	0
   193  0041                     STR_6:	
   194  0041  3425               	retlw	37	;'%'
   195  0042  3464               	retlw	100	;'d'
   196  0043  342E               	retlw	46	;'.'
   197  0044  3425               	retlw	37	;'%'
   198  0045  3464               	retlw	100	;'d'
   199  0046  3400               	retlw	0
   200  0047                     STR_3:	
   201  0047  3448               	retlw	72	;'H'
   202  0048  3400               	retlw	0
   203  0049                     __end_of__stringdata:	
   204                           
   205                           ; #config settings
   206  0000                     
   207                           	psect	cinit
   208  07FD                     start_initialization:	
   209  07FD                     __initialization:	
   210                           
   211                           ; Clear objects allocated to BITBANK0
   212  07FD  01E2               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   213  07FE                     end_of_initialization:	
   214                           ;End of C runtime variable initialization code
   215                           
   216  07FE                     __end_of__initialization:	
   217  07FE  0183               	clrf	3
   218  07FF  2E9D               	ljmp	_main	;jump to C main() function
   219                           
   220                           	psect	bitbssBANK0
   221  0310                     __pbitbssBANK0:	
   222  0310                     _rs_flag:	
   223  0310                     	ds	1
   224                           
   225                           	psect	cstackCOMMON
   226  0070                     __pcstackCOMMON:	
   227  0070                     ?_hd44780_init:	
   228  0070                     ?_hd44780_clear:	
   229                           ; 0 bytes @ 0x0
   230                           
   231  0070                     ?_hd44780_busy:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0070                     ??_hd44780_busy:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?_hd44780_write:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ??_hd44780_write:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_hd44780_newline:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_debounce_read:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ??_debounce_read:	
   250                           ; 1 bit 
   251                           
   252  0070                     ?_init:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_hd44780_pulse:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ??_hd44780_pulse:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_hd44780_char:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_main:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?___lwdiv:	
   268                           ; 2 bytes @ 0x0
   269                           
   270  0070                     ___lwdiv@divisor:	
   271                           ; 2 bytes @ 0x0
   272                           
   273                           
   274                           ; 2 bytes @ 0x0
   275  0070                     	ds	1
   276  0071                     debounce_read@pin:	
   277                           
   278                           ; 1 bytes @ 0x1
   279  0071                     	ds	1
   280  0072                     debounce_read@count:	
   281  0072                     hd44780_write@bt:	
   282                           ; 1 bytes @ 0x2
   283                           
   284  0072                     ___lwdiv@dividend:	
   285                           ; 1 bytes @ 0x2
   286                           
   287                           
   288                           ; 2 bytes @ 0x2
   289  0072                     	ds	1
   290  0073                     hd44780_write@tmp:	
   291                           
   292                           ; 1 bytes @ 0x3
   293  0073                     	ds	1
   294  0074                     ??_hd44780_init:	
   295  0074                     ??_hd44780_clear:	
   296                           ; 0 bytes @ 0x4
   297                           
   298  0074                     ??_hd44780_newline:	
   299                           ; 0 bytes @ 0x4
   300                           
   301  0074                     ??_hd44780_char:	
   302                           ; 0 bytes @ 0x4
   303                           
   304  0074                     ??___lwdiv:	
   305                           ; 0 bytes @ 0x4
   306                           
   307  0074                     hd44780_char@bt:	
   308                           ; 0 bytes @ 0x4
   309                           
   310                           
   311                           ; 1 bytes @ 0x4
   312  0074                     	ds	1
   313  0075                     ?_hd44780_printstr:	
   314  0075                     ?_hd44780_printchr:	
   315                           ; 0 bytes @ 0x5
   316                           
   317  0075                     ?_hd44780_block_erase:	
   318                           ; 0 bytes @ 0x5
   319                           
   320  0075                     hd44780_printchr@loc:	
   321                           ; 0 bytes @ 0x5
   322                           
   323  0075                     hd44780_block_erase@length:	
   324                           ; 1 bytes @ 0x5
   325                           
   326  0075                     hd44780_printstr@dta:	
   327                           ; 1 bytes @ 0x5
   328                           
   329  0075                     ___lwdiv@quotient:	
   330                           ; 2 bytes @ 0x5
   331                           
   332                           
   333                           ; 2 bytes @ 0x5
   334  0075                     	ds	1
   335  0076                     ??_hd44780_printchr:	
   336  0076                     ??_hd44780_block_erase:	
   337                           ; 0 bytes @ 0x6
   338                           
   339  0076                     ??_init:	
   340                           ; 0 bytes @ 0x6
   341                           
   342  0076                     hd44780_printchr@dta:	
   343                           ; 0 bytes @ 0x6
   344                           
   345                           
   346                           ; 1 bytes @ 0x6
   347  0076                     	ds	1
   348  0077                     hd44780_printstr@loc:	
   349  0077                     hd44780_block_erase@start_loc:	
   350                           ; 1 bytes @ 0x7
   351                           
   352  0077                     ___lwdiv@counter:	
   353                           ; 1 bytes @ 0x7
   354                           
   355                           
   356                           ; 1 bytes @ 0x7
   357  0077                     	ds	1
   358  0078                     ??_hd44780_printstr:	
   359  0078                     ?___lwmod:	
   360                           ; 0 bytes @ 0x8
   361                           
   362  0078                     hd44780_block_erase@i:	
   363                           ; 2 bytes @ 0x8
   364                           
   365  0078                     ___lwmod@divisor:	
   366                           ; 2 bytes @ 0x8
   367                           
   368                           
   369                           ; 2 bytes @ 0x8
   370  0078                     	ds	2
   371  007A                     ___lwmod@dividend:	
   372                           
   373                           ; 2 bytes @ 0xA
   374  007A                     	ds	2
   375  007C                     ??___lwmod:	
   376                           
   377                           ; 0 bytes @ 0xC
   378  007C                     	ds	1
   379  007D                     ___lwmod@counter:	
   380                           
   381                           ; 1 bytes @ 0xD
   382  007D                     	ds	1
   383                           
   384                           	psect	cstackBANK0
   385  0020                     __pcstackBANK0:	
   386  0020                     ?_sprintf:	
   387  0020                     sprintf@f:	
   388                           ; 2 bytes @ 0x0
   389                           
   390                           
   391                           ; 1 bytes @ 0x0
   392  0020                     	ds	5
   393  0025                     ??_sprintf:	
   394                           
   395                           ; 0 bytes @ 0x5
   396  0025                     	ds	3
   397  0028                     sprintf@ap:	
   398                           
   399                           ; 1 bytes @ 0x8
   400  0028                     	ds	1
   401  0029                     sprintf@flag:	
   402                           
   403                           ; 1 bytes @ 0x9
   404  0029                     	ds	1
   405  002A                     sprintf@prec:	
   406                           
   407                           ; 1 bytes @ 0xA
   408  002A                     	ds	1
   409  002B                     sprintf@_val:	
   410                           
   411                           ; 4 bytes @ 0xB
   412  002B                     	ds	4
   413  002F                     sprintf@sp:	
   414                           
   415                           ; 1 bytes @ 0xF
   416  002F                     	ds	1
   417  0030                     sprintf@c:	
   418                           
   419                           ; 1 bytes @ 0x10
   420  0030                     	ds	1
   421  0031                     ?_hd44780_printint:	
   422  0031                     ?_hd44780_printdecimal:	
   423                           ; 0 bytes @ 0x11
   424                           
   425  0031                     hd44780_printint@dta:	
   426                           ; 0 bytes @ 0x11
   427                           
   428  0031                     hd44780_printdecimal@i:	
   429                           ; 2 bytes @ 0x11
   430                           
   431                           
   432                           ; 2 bytes @ 0x11
   433  0031                     	ds	2
   434  0033                     hd44780_printint@loc:	
   435  0033                     hd44780_printdecimal@d:	
   436                           ; 1 bytes @ 0x13
   437                           
   438                           
   439                           ; 2 bytes @ 0x13
   440  0033                     	ds	1
   441  0034                     ??_hd44780_printint:	
   442                           
   443                           ; 0 bytes @ 0x14
   444  0034                     	ds	1
   445  0035                     hd44780_printdecimal@loc:	
   446  0035                     hd44780_printint@buff:	
   447                           ; 1 bytes @ 0x15
   448                           
   449                           
   450                           ; 5 bytes @ 0x15
   451  0035                     	ds	1
   452  0036                     ??_hd44780_printdecimal:	
   453                           
   454                           ; 0 bytes @ 0x16
   455  0036                     	ds	1
   456  0037                     hd44780_printdecimal@buff:	
   457                           
   458                           ; 10 bytes @ 0x17
   459  0037                     	ds	10
   460  0041                     ??_main:	
   461                           
   462                           ; 0 bytes @ 0x21
   463  0041                     	ds	3
   464  0044                     main@buff:	
   465                           
   466                           ; 25 bytes @ 0x24
   467  0044                     	ds	25
   468  005D                     main@text2:	
   469                           
   470                           ; 1 bytes @ 0x3D
   471  005D                     	ds	1
   472  005E                     main@text:	
   473                           
   474                           ; 1 bytes @ 0x3E
   475  005E                     	ds	1
   476  005F                     main@text3:	
   477                           
   478                           ; 1 bytes @ 0x3F
   479  005F                     	ds	1
   480  0060                     main@i:	
   481                           
   482                           ; 2 bytes @ 0x40
   483  0060                     	ds	2
   484                           
   485                           	psect	maintext
   486  069D                     __pmaintext:	
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 30 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;  buff           25   36[BANK0 ] unsigned char [25]
   497 ;;  i               2   64[BANK0 ] int 
   498 ;;  text3           1   63[BANK0 ] PTR unsigned char 
   499 ;;		 -> STR_3(2), 
   500 ;;  text            1   62[BANK0 ] PTR unsigned char 
   501 ;;		 -> STR_1(11), 
   502 ;;  text2           1   61[BANK0 ] PTR unsigned char 
   503 ;;		 -> STR_2(15), 
   504 ;; Return value:  Size  Location     Type
   505 ;;                  2   41[COMMON] int 
   506 ;; Registers used:
   507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 17F/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   513 ;;      Params:         0       0       0       0
   514 ;;      Locals:         0      30       0       0
   515 ;;      Temps:          0       3       0       0
   516 ;;      Totals:         0      33       0       0
   517 ;;Total ram usage:       33 bytes
   518 ;; Hardware stack levels required when called:    5
   519 ;; This function calls:
   520 ;;		_debounce_read
   521 ;;		_hd44780_block_erase
   522 ;;		_hd44780_clear
   523 ;;		_hd44780_printchr
   524 ;;		_hd44780_printdecimal
   525 ;;		_hd44780_printint
   526 ;;		_hd44780_printstr
   527 ;;		_init
   528 ;;		_sprintf
   529 ;; This function is called by:
   530 ;;		Startup code after reset
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           
   535                           ;psect for function _main
   536  069D                     _main:	
   537                           
   538                           ;main.c: 32: char *text = "Counting: ";
   539                           
   540                           ;incstack = 0
   541                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   542  069D  3026               	movlw	(STR_1-__stringbase)& (0+255)
   543  069E  1283               	bcf	3,5	;RP0=0, select bank0
   544  069F  1303               	bcf	3,6	;RP1=0, select bank0
   545  06A0  00C1               	movwf	??_main
   546  06A1  0841               	movf	??_main,w
   547  06A2  00DE               	movwf	main@text
   548                           
   549                           ;main.c: 33: char *text2 = "Text \nDisplay2";
   550  06A3  300B               	movlw	(STR_2-__stringbase)& (0+255)
   551  06A4  00C1               	movwf	??_main
   552  06A5  0841               	movf	??_main,w
   553  06A6  00DD               	movwf	main@text2
   554                           
   555                           ;main.c: 34: char *text3 = "H";
   556  06A7  3037               	movlw	(STR_3-__stringbase)& (0+255)
   557  06A8  00C1               	movwf	??_main
   558  06A9  0841               	movf	??_main,w
   559  06AA  00DF               	movwf	main@text3
   560                           
   561                           ;main.c: 35: int i;
   562                           ;main.c: 36: char buff[25];
   563                           ;main.c: 47: init();
   564  06AB  24F7               	fcall	_init
   565                           
   566                           ;main.c: 49: hd44780_printstr( text, 1 );
   567  06AC  1283               	bcf	3,5	;RP0=0, select bank0
   568  06AD  1303               	bcf	3,6	;RP1=0, select bank0
   569  06AE  085E               	movf	main@text,w
   570  06AF  00F5               	movwf	hd44780_printstr@dta
   571  06B0  3080               	movlw	128
   572  06B1  00F6               	movwf	hd44780_printstr@dta+1
   573  06B2  01F7               	clrf	hd44780_printstr@loc
   574  06B3  0AF7               	incf	hd44780_printstr@loc,f
   575  06B4  2574               	fcall	_hd44780_printstr
   576                           
   577                           ;main.c: 50: hd44780_printstr( text3, 7 );
   578  06B5  1283               	bcf	3,5	;RP0=0, select bank0
   579  06B6  1303               	bcf	3,6	;RP1=0, select bank0
   580  06B7  085F               	movf	main@text3,w
   581  06B8  00F5               	movwf	hd44780_printstr@dta
   582  06B9  3080               	movlw	128
   583  06BA  00F6               	movwf	hd44780_printstr@dta+1
   584  06BB  3007               	movlw	7
   585  06BC  00C1               	movwf	??_main
   586  06BD  0841               	movf	??_main,w
   587  06BE  00F7               	movwf	hd44780_printstr@loc
   588  06BF  2574               	fcall	_hd44780_printstr
   589                           
   590                           ;main.c: 51: hd44780_clear();
   591  06C0  24E2               	fcall	_hd44780_clear
   592                           
   593                           ;main.c: 52: hd44780_printchr( 'H', 7 );
   594  06C1  3007               	movlw	7
   595  06C2  1283               	bcf	3,5	;RP0=0, select bank0
   596  06C3  1303               	bcf	3,6	;RP1=0, select bank0
   597  06C4  00C1               	movwf	??_main
   598  06C5  0841               	movf	??_main,w
   599  06C6  00F5               	movwf	hd44780_printchr@loc
   600  06C7  3048               	movlw	72
   601  06C8  24E8               	fcall	_hd44780_printchr
   602                           
   603                           ;main.c: 53: hd44780_printint( -2500, 5 );
   604  06C9  303C               	movlw	60
   605  06CA  1283               	bcf	3,5	;RP0=0, select bank0
   606  06CB  1303               	bcf	3,6	;RP1=0, select bank0
   607  06CC  00B1               	movwf	hd44780_printint@dta
   608  06CD  30F6               	movlw	246
   609  06CE  00B2               	movwf	hd44780_printint@dta+1
   610  06CF  3005               	movlw	5
   611  06D0  00C1               	movwf	??_main
   612  06D1  0841               	movf	??_main,w
   613  06D2  00B3               	movwf	hd44780_printint@loc
   614  06D3  2521               	fcall	_hd44780_printint
   615                           
   616                           ;main.c: 54: hd44780_clear();
   617  06D4  24E2               	fcall	_hd44780_clear
   618                           
   619                           ;main.c: 56: sprintf(buff, "Counter :%d", 1);
   620  06D5  301A               	movlw	(STR_4-__stringbase)& (0+255)
   621  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   622  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   623  06D8  00C1               	movwf	??_main
   624  06D9  0841               	movf	??_main,w
   625  06DA  00A0               	movwf	sprintf@f
   626  06DB  3001               	movlw	1
   627  06DC  00A1               	movwf	?_sprintf+1
   628  06DD  3000               	movlw	0
   629  06DE  00A2               	movwf	?_sprintf+2
   630  06DF  3044               	movlw	main@buff& (0+255)
   631  06E0  2744               	fcall	_sprintf
   632                           
   633                           ;main.c: 57: hd44780_printstr( &buff, 0 );
   634  06E1  3044               	movlw	main@buff& (0+255)
   635  06E2  00F5               	movwf	hd44780_printstr@dta
   636  06E3  3000               	movlw	0
   637  06E4  00F6               	movwf	hd44780_printstr@dta+1
   638  06E5  01F7               	clrf	hd44780_printstr@loc
   639  06E6  2574               	fcall	_hd44780_printstr
   640  06E7                     l1228:	
   641                           ;main.c: 82: while(1){
   642                           
   643                           
   644                           ;main.c: 83: for(i=0;i<5000;i++){
   645  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   646  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   647  06E9  01E0               	clrf	main@i
   648  06EA  01E1               	clrf	main@i+1
   649  06EB  0861               	movf	main@i+1,w
   650  06EC  3A80               	xorlw	128
   651  06ED  00FF               	movwf	127
   652  06EE  3093               	movlw	147
   653  06EF  027F               	subwf	127,w
   654  06F0  1D03               	skipz
   655  06F1  2EF4               	goto	u685
   656  06F2  3088               	movlw	136
   657  06F3  0260               	subwf	main@i,w
   658  06F4                     u685:	
   659  06F4  1803               	btfsc	3,0
   660  06F5  2F3B               	goto	l1246
   661  06F6                     l1234:	
   662                           
   663                           ;main.c: 88: hd44780_printdecimal( i, debounce_read( PORTAbits.RA0 ), 0x40 );
   664  06F6  1283               	bcf	3,5	;RP0=0, select bank0
   665  06F7  1303               	bcf	3,6	;RP1=0, select bank0
   666  06F8  0861               	movf	main@i+1,w
   667  06F9  01B2               	clrf	hd44780_printdecimal@i+1
   668  06FA  07B2               	addwf	hd44780_printdecimal@i+1,f
   669  06FB  0860               	movf	main@i,w
   670  06FC  01B1               	clrf	hd44780_printdecimal@i
   671  06FD  07B1               	addwf	hd44780_printdecimal@i,f
   672  06FE  0805               	movf	5,w	;volatile
   673  06FF  3901               	andlw	1
   674  0700  2556               	fcall	_debounce_read
   675  0701  3000               	movlw	0
   676  0702  1803               	skipnc
   677  0703  3001               	movlw	1
   678  0704  1283               	bcf	3,5	;RP0=0, select bank0
   679  0705  1303               	bcf	3,6	;RP1=0, select bank0
   680  0706  00C1               	movwf	??_main
   681  0707  01C2               	clrf	??_main+1
   682  0708  0841               	movf	??_main,w
   683  0709  00B3               	movwf	hd44780_printdecimal@d
   684  070A  0842               	movf	??_main+1,w
   685  070B  00B4               	movwf	hd44780_printdecimal@d+1
   686  070C  3040               	movlw	64
   687  070D  00C3               	movwf	??_main+2
   688  070E  0843               	movf	??_main+2,w
   689  070F  00B5               	movwf	hd44780_printdecimal@loc
   690  0710  2598               	fcall	_hd44780_printdecimal
   691                           
   692                           ;main.c: 89: _delay((unsigned long)((100)*(4000000/4000.0)));
   693  0711  3082               	movlw	130
   694  0712  1283               	bcf	3,5	;RP0=0, select bank0
   695  0713  1303               	bcf	3,6	;RP1=0, select bank0
   696  0714  00C2               	movwf	??_main+1
   697  0715  30DD               	movlw	221
   698  0716  00C1               	movwf	??_main
   699  0717                     u717:	
   700  0717  0BC1               	decfsz	??_main,f
   701  0718  2F17               	goto	u717
   702  0719  0BC2               	decfsz	??_main+1,f
   703  071A  2F17               	goto	u717
   704  071B  2F1C               	nop2
   705                           
   706                           ;main.c: 95: if( debounce_read( PORTAbits.RA0 ) == 1 ){
   707  071C  1283               	bcf	3,5	;RP0=0, select bank0
   708  071D  1303               	bcf	3,6	;RP1=0, select bank0
   709  071E  0805               	movf	5,w	;volatile
   710  071F  3901               	andlw	1
   711  0720  2556               	fcall	_debounce_read
   712  0721  1C03               	btfss	3,0
   713  0722  2F27               	goto	l45
   714                           
   715                           ;main.c: 96: RA1 = 0x01;
   716  0723  1283               	bcf	3,5	;RP0=0, select bank0
   717  0724  1303               	bcf	3,6	;RP1=0, select bank0
   718  0725  1485               	bsf	5,1	;volatile
   719                           
   720                           ;main.c: 97: }else{
   721  0726  2F2A               	goto	l1242
   722  0727                     l45:	
   723                           
   724                           ;main.c: 98: RA1 = 0x00;
   725  0727  1283               	bcf	3,5	;RP0=0, select bank0
   726  0728  1303               	bcf	3,6	;RP1=0, select bank0
   727  0729  1085               	bcf	5,1	;volatile
   728  072A                     l1242:	
   729  072A  3001               	movlw	1
   730  072B  07E0               	addwf	main@i,f
   731  072C  1803               	skipnc
   732  072D  0AE1               	incf	main@i+1,f
   733  072E  3000               	movlw	0
   734  072F  07E1               	addwf	main@i+1,f
   735  0730  0861               	movf	main@i+1,w
   736  0731  3A80               	xorlw	128
   737  0732  00FF               	movwf	127
   738  0733  3093               	movlw	147
   739  0734  027F               	subwf	127,w
   740  0735  1D03               	skipz
   741  0736  2F39               	goto	u705
   742  0737  3088               	movlw	136
   743  0738  0260               	subwf	main@i,w
   744  0739                     u705:	
   745  0739  1C03               	skipc
   746  073A  2EF6               	goto	l1234
   747  073B                     l1246:	
   748                           
   749                           ;main.c: 99: }
   750                           ;main.c: 101: }
   751                           ;main.c: 103: hd44780_block_erase( 0x40, 6 );
   752  073B  3006               	movlw	6
   753  073C  1283               	bcf	3,5	;RP0=0, select bank0
   754  073D  1303               	bcf	3,6	;RP1=0, select bank0
   755  073E  00C1               	movwf	??_main
   756  073F  0841               	movf	??_main,w
   757  0740  00F5               	movwf	hd44780_block_erase@length
   758  0741  3040               	movlw	64
   759  0742  253B               	fcall	_hd44780_block_erase
   760  0743  2EE7               	goto	l1228
   761  0744                     __end_of_main:	
   762                           ;main.c: 104: }
   763                           ;main.c: 106: return 0;
   764                           ;	Return value of _main is never used
   765                           
   766                           
   767                           	psect	text1
   768  04F7                     __ptext1:	
   769 ;; *************** function _init *****************
   770 ;; Defined at:
   771 ;;		line 20 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\main.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;		None               void
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   785 ;;      Params:         0       0       0       0
   786 ;;      Locals:         0       0       0       0
   787 ;;      Temps:          0       0       0       0
   788 ;;      Totals:         0       0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    3
   792 ;; This function calls:
   793 ;;		_hd44780_init
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           
   800                           ;psect for function _init
   801  04F7                     _init:	
   802                           
   803                           ;main.c: 23: CMCON = 0x07;
   804                           
   805                           ;incstack = 0
   806                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   807  04F7  3007               	movlw	7
   808  04F8  1283               	bcf	3,5	;RP0=0, select bank0
   809  04F9  1303               	bcf	3,6	;RP1=0, select bank0
   810  04FA  009F               	movwf	31	;volatile
   811                           
   812                           ;main.c: 25: TRISA = 0b00000001;
   813  04FB  3001               	movlw	1
   814  04FC  1683               	bsf	3,5	;RP0=1, select bank1
   815  04FD  1303               	bcf	3,6	;RP1=0, select bank1
   816  04FE  0085               	movwf	5	;volatile
   817                           
   818                           ;main.c: 27: hd44780_init();
   819  04FF  2624               	fcall	_hd44780_init
   820  0500  0008               	return
   821  0501                     __end_of_init:	
   822                           
   823                           	psect	text2
   824  0624                     __ptext2:	
   825 ;; *************** function _hd44780_init *****************
   826 ;; Defined at:
   827 ;;		line 10 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\hd44780.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;		None               void
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0, pclath, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   841 ;;      Params:         0       0       0       0
   842 ;;      Locals:         0       0       0       0
   843 ;;      Temps:          2       0       0       0
   844 ;;      Totals:         2       0       0       0
   845 ;;Total ram usage:        2 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    2
   848 ;; This function calls:
   849 ;;		_hd44780_busy
   850 ;;		_hd44780_pulse
   851 ;;		_hd44780_write
   852 ;; This function is called by:
   853 ;;		_init
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           
   858                           ;psect for function _hd44780_init
   859  0624                     _hd44780_init:	
   860                           
   861                           ;hd44780.c: 13: TRISB = 0x00;
   862                           
   863                           ;incstack = 0
   864                           ; Regs used in _hd44780_init: [wreg+status,2+status,0+pclath+cstack]
   865  0624  1683               	bsf	3,5	;RP0=1, select bank1
   866  0625  1303               	bcf	3,6	;RP1=0, select bank1
   867  0626  0186               	clrf	6	;volatile
   868                           
   869                           ;hd44780.c: 14: PORTB = 0x00;
   870  0627  1283               	bcf	3,5	;RP0=0, select bank0
   871  0628  1303               	bcf	3,6	;RP1=0, select bank0
   872  0629  0186               	clrf	6	;volatile
   873                           
   874                           ;hd44780.c: 16: _delay((unsigned long)((20)*(4000000/4000.0)));
   875  062A  301A               	movlw	26
   876  062B  00F5               	movwf	??_hd44780_init+1
   877  062C  30F8               	movlw	248
   878  062D  00F4               	movwf	??_hd44780_init
   879  062E                     u727:	
   880  062E  0BF4               	decfsz	??_hd44780_init,f
   881  062F  2E2E               	goto	u727
   882  0630  0BF5               	decfsz	??_hd44780_init+1,f
   883  0631  2E2E               	goto	u727
   884  0632  0000               	nop
   885                           
   886                           ;hd44780.c: 17: PORTB = 0b00000011;
   887  0633  3003               	movlw	3
   888  0634  1283               	bcf	3,5	;RP0=0, select bank0
   889  0635  1303               	bcf	3,6	;RP1=0, select bank0
   890  0636  0086               	movwf	6	;volatile
   891                           
   892                           ;hd44780.c: 18: hd44780_pulse();
   893  0637  24EF               	fcall	_hd44780_pulse
   894                           
   895                           ;hd44780.c: 19: _delay((unsigned long)((5)*(4000000/4000.0)));
   896  0638  3007               	movlw	7
   897  0639  00F5               	movwf	??_hd44780_init+1
   898  063A  307D               	movlw	125
   899  063B  00F4               	movwf	??_hd44780_init
   900  063C                     u737:	
   901  063C  0BF4               	decfsz	??_hd44780_init,f
   902  063D  2E3C               	goto	u737
   903  063E  0BF5               	decfsz	??_hd44780_init+1,f
   904  063F  2E3C               	goto	u737
   905                           
   906                           ;hd44780.c: 20: PORTB = 0b00000011;
   907  0640  3003               	movlw	3
   908  0641  1283               	bcf	3,5	;RP0=0, select bank0
   909  0642  1303               	bcf	3,6	;RP1=0, select bank0
   910  0643  0086               	movwf	6	;volatile
   911                           
   912                           ;hd44780.c: 21: hd44780_pulse();
   913  0644  24EF               	fcall	_hd44780_pulse
   914                           
   915                           ;hd44780.c: 22: _delay((unsigned long)((120)*(4000000/4000000.0)));
   916  0645  3027               	movlw	39
   917  0646  00F4               	movwf	??_hd44780_init
   918  0647                     u747:	
   919  0647  0BF4               	decfsz	??_hd44780_init,f
   920  0648  2E47               	goto	u747
   921  0649  2E4A               	nop2	;nop
   922                           
   923                           ;hd44780.c: 23: PORTB = 0b00000011;
   924  064A  3003               	movlw	3
   925  064B  1283               	bcf	3,5	;RP0=0, select bank0
   926  064C  1303               	bcf	3,6	;RP1=0, select bank0
   927  064D  0086               	movwf	6	;volatile
   928                           
   929                           ;hd44780.c: 24: hd44780_pulse();
   930  064E  24EF               	fcall	_hd44780_pulse
   931                           
   932                           ;hd44780.c: 26: hd44780_busy();
   933  064F  250D               	fcall	_hd44780_busy
   934                           
   935                           ;hd44780.c: 28: PORTB = 0b00000010;
   936  0650  3002               	movlw	2
   937  0651  1283               	bcf	3,5	;RP0=0, select bank0
   938  0652  1303               	bcf	3,6	;RP1=0, select bank0
   939  0653  0086               	movwf	6	;volatile
   940                           
   941                           ;hd44780.c: 29: hd44780_pulse();
   942  0654  24EF               	fcall	_hd44780_pulse
   943                           
   944                           ;hd44780.c: 31: hd44780_busy();
   945  0655  250D               	fcall	_hd44780_busy
   946                           
   947                           ;hd44780.c: 34: hd44780_write( 0b00101000 );
   948  0656  3028               	movlw	40
   949  0657  25BF               	fcall	_hd44780_write
   950                           
   951                           ;hd44780.c: 36: hd44780_write( 0b00001100 );
   952  0658  300C               	movlw	12
   953  0659  25BF               	fcall	_hd44780_write
   954                           
   955                           ;hd44780.c: 37: hd44780_write( 0b00000001 );
   956  065A  3001               	movlw	1
   957  065B  25BF               	fcall	_hd44780_write
   958                           
   959                           ;hd44780.c: 38: hd44780_write( 0b00000110 );
   960  065C  3006               	movlw	6
   961  065D  25BF               	fcall	_hd44780_write
   962  065E  0008               	return
   963  065F                     __end_of_hd44780_init:	
   964                           
   965                           	psect	text3
   966  0521                     __ptext3:	
   967 ;; *************** function _hd44780_printint *****************
   968 ;; Defined at:
   969 ;;		line 159 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\hd44780.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  dta             2   17[BANK0 ] int 
   972 ;;  loc             1   19[BANK0 ] unsigned char 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  buff            5   21[BANK0 ] unsigned char [5]
   975 ;; Return value:  Size  Location     Type
   976 ;;		None               void
   977 ;; Registers used:
   978 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   984 ;;      Params:         0       3       0       0
   985 ;;      Locals:         0       5       0       0
   986 ;;      Temps:          0       1       0       0
   987 ;;      Totals:         0       9       0       0
   988 ;;Total ram usage:        9 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    4
   991 ;; This function calls:
   992 ;;		_hd44780_printstr
   993 ;;		_sprintf
   994 ;; This function is called by:
   995 ;;		_main
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function _hd44780_printint
  1001  0521                     _hd44780_printint:	
  1002                           
  1003                           ;hd44780.c: 165: char buff[5];
  1004                           ;hd44780.c: 167: sprintf(buff, "%d", dta);
  1005                           
  1006                           ;incstack = 0
  1007                           ; Regs used in _hd44780_printint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1008  0521  3034               	movlw	((STR_6+3)-__stringbase)& (0+255)
  1009  0522  1283               	bcf	3,5	;RP0=0, select bank0
  1010  0523  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0524  00B4               	movwf	??_hd44780_printint
  1012  0525  0834               	movf	??_hd44780_printint,w
  1013  0526  00A0               	movwf	sprintf@f
  1014  0527  0832               	movf	hd44780_printint@dta+1,w
  1015  0528  01A2               	clrf	?_sprintf+2
  1016  0529  07A2               	addwf	?_sprintf+2,f
  1017  052A  0831               	movf	hd44780_printint@dta,w
  1018  052B  01A1               	clrf	?_sprintf+1
  1019  052C  07A1               	addwf	?_sprintf+1,f
  1020  052D  3035               	movlw	hd44780_printint@buff& (0+255)
  1021  052E  2744               	fcall	_sprintf
  1022                           
  1023                           ;hd44780.c: 169: hd44780_printstr( &buff, loc );
  1024  052F  3035               	movlw	hd44780_printint@buff& (0+255)
  1025  0530  00F5               	movwf	hd44780_printstr@dta
  1026  0531  3000               	movlw	0
  1027  0532  00F6               	movwf	hd44780_printstr@dta+1
  1028  0533  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0534  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0535  0833               	movf	hd44780_printint@loc,w
  1031  0536  00B4               	movwf	??_hd44780_printint
  1032  0537  0834               	movf	??_hd44780_printint,w
  1033  0538  00F7               	movwf	hd44780_printstr@loc
  1034  0539  2574               	fcall	_hd44780_printstr
  1035  053A  0008               	return
  1036  053B                     __end_of_hd44780_printint:	
  1037                           
  1038                           	psect	text4
  1039  0598                     __ptext4:	
  1040 ;; *************** function _hd44780_printdecimal *****************
  1041 ;; Defined at:
  1042 ;;		line 174 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\hd44780.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  i               2   17[BANK0 ] int 
  1045 ;;  d               2   19[BANK0 ] int 
  1046 ;;  loc             1   21[BANK0 ] unsigned char 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  buff           10   23[BANK0 ] unsigned char [10]
  1049 ;; Return value:  Size  Location     Type
  1050 ;;		None               void
  1051 ;; Registers used:
  1052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1058 ;;      Params:         0       5       0       0
  1059 ;;      Locals:         0      10       0       0
  1060 ;;      Temps:          0       1       0       0
  1061 ;;      Totals:         0      16       0       0
  1062 ;;Total ram usage:       16 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    4
  1065 ;; This function calls:
  1066 ;;		_hd44780_printstr
  1067 ;;		_sprintf
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _hd44780_printdecimal
  1075  0598                     _hd44780_printdecimal:	
  1076                           
  1077                           ;hd44780.c: 176: char buff[10];
  1078                           ;hd44780.c: 180: if(d < 0){
  1079                           
  1080                           ;incstack = 0
  1081                           ; Regs used in _hd44780_printdecimal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1082  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1084  059A  1FB4               	btfss	hd44780_printdecimal@d+1,7
  1085  059B  2DA1               	goto	l1204
  1086                           
  1087                           ;hd44780.c: 181: d = -d;
  1088  059C  09B3               	comf	hd44780_printdecimal@d,f
  1089  059D  09B4               	comf	hd44780_printdecimal@d+1,f
  1090  059E  0AB3               	incf	hd44780_printdecimal@d,f
  1091  059F  1903               	skipnz
  1092  05A0  0AB4               	incf	hd44780_printdecimal@d+1,f
  1093  05A1                     l1204:	
  1094                           
  1095                           ;hd44780.c: 182: }
  1096                           ;hd44780.c: 184: sprintf(buff, "%d.%d", i, d);
  1097  05A1  3031               	movlw	(STR_6-__stringbase)& (0+255)
  1098  05A2  00B6               	movwf	??_hd44780_printdecimal
  1099  05A3  0836               	movf	??_hd44780_printdecimal,w
  1100  05A4  00A0               	movwf	sprintf@f
  1101  05A5  0832               	movf	hd44780_printdecimal@i+1,w
  1102  05A6  01A2               	clrf	?_sprintf+2
  1103  05A7  07A2               	addwf	?_sprintf+2,f
  1104  05A8  0831               	movf	hd44780_printdecimal@i,w
  1105  05A9  01A1               	clrf	?_sprintf+1
  1106  05AA  07A1               	addwf	?_sprintf+1,f
  1107  05AB  0834               	movf	hd44780_printdecimal@d+1,w
  1108  05AC  01A4               	clrf	?_sprintf+4
  1109  05AD  07A4               	addwf	?_sprintf+4,f
  1110  05AE  0833               	movf	hd44780_printdecimal@d,w
  1111  05AF  01A3               	clrf	?_sprintf+3
  1112  05B0  07A3               	addwf	?_sprintf+3,f
  1113  05B1  3037               	movlw	hd44780_printdecimal@buff& (0+255)
  1114  05B2  2744               	fcall	_sprintf
  1115                           
  1116                           ;hd44780.c: 186: hd44780_printstr( &buff, loc );
  1117  05B3  3037               	movlw	hd44780_printdecimal@buff& (0+255)
  1118  05B4  00F5               	movwf	hd44780_printstr@dta
  1119  05B5  3000               	movlw	0
  1120  05B6  00F6               	movwf	hd44780_printstr@dta+1
  1121  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1122  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1123  05B9  0835               	movf	hd44780_printdecimal@loc,w
  1124  05BA  00B6               	movwf	??_hd44780_printdecimal
  1125  05BB  0836               	movf	??_hd44780_printdecimal,w
  1126  05BC  00F7               	movwf	hd44780_printstr@loc
  1127  05BD  2574               	fcall	_hd44780_printstr
  1128  05BE  0008               	return
  1129  05BF                     __end_of_hd44780_printdecimal:	
  1130                           
  1131                           	psect	text5
  1132  0744                     __ptext5:	
  1133 ;; *************** function _sprintf *****************
  1134 ;; Defined at:
  1135 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\doprnt.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  sp              1    wreg     PTR unsigned char 
  1138 ;;		 -> hd44780_printdecimal@buff(10), hd44780_printint@buff(5), main@buff(25), 
  1139 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1140 ;;		 -> STR_6(6), STR_5(3), STR_4(12), 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  1143 ;;		 -> hd44780_printdecimal@buff(10), hd44780_printint@buff(5), main@buff(25), 
  1144 ;;  _val            4   11[BANK0 ] struct .
  1145 ;;  c               1   16[BANK0 ] char 
  1146 ;;  prec            1   10[BANK0 ] char 
  1147 ;;  flag            1    9[BANK0 ] unsigned char 
  1148 ;;  ap              1    8[BANK0 ] PTR void [1]
  1149 ;;		 -> ?_sprintf(2), 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  2    0[BANK0 ] int 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1159 ;;      Params:         0       5       0       0
  1160 ;;      Locals:         0       9       0       0
  1161 ;;      Temps:          0       3       0       0
  1162 ;;      Totals:         0      17       0       0
  1163 ;;Total ram usage:       17 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    1
  1166 ;; This function calls:
  1167 ;;		___lwdiv
  1168 ;;		___lwmod
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;;		_hd44780_printint
  1172 ;;		_hd44780_printdecimal
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           
  1177                           ;psect for function _sprintf
  1178  0744                     _sprintf:	
  1179                           
  1180                           ;incstack = 0
  1181                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1182                           ;sprintf@sp stored from wreg
  1183  0744  1283               	bcf	3,5	;RP0=0, select bank0
  1184  0745  1303               	bcf	3,6	;RP1=0, select bank0
  1185  0746  00AF               	movwf	sprintf@sp
  1186                           
  1187                           ;doprnt.c: 494: va_list ap;
  1188                           ;doprnt.c: 499: signed char c;
  1189                           ;doprnt.c: 506: signed char prec;
  1190                           ;doprnt.c: 508: unsigned char flag;
  1191                           ;doprnt.c: 527: union {
  1192                           ;doprnt.c: 528: unsigned int _val;
  1193                           ;doprnt.c: 529: struct {
  1194                           ;doprnt.c: 530: const char * _cp;
  1195                           ;doprnt.c: 531: unsigned _len;
  1196                           ;doprnt.c: 532: } _str;
  1197                           ;doprnt.c: 533: } _val;
  1198                           ;doprnt.c: 542: *ap = __va_start();
  1199  0747  3021               	movlw	(?_sprintf+1)& (0+255)
  1200  0748  00A5               	movwf	??_sprintf
  1201  0749  0825               	movf	??_sprintf,w
  1202  074A  00A8               	movwf	sprintf@ap
  1203  074B                     l1094:	
  1204                           ;doprnt.c: 545: while(c = *f++) {
  1205                           
  1206  074B  3001               	movlw	1
  1207  074C  07A0               	addwf	sprintf@f,f
  1208  074D  30FF               	movlw	-1
  1209  074E  0720               	addwf	sprintf@f,w
  1210  074F  0084               	movwf	4
  1211  0750  200B               	fcall	stringdir
  1212  0751  00A5               	movwf	??_sprintf
  1213  0752  0825               	movf	??_sprintf,w
  1214  0753  00B0               	movwf	sprintf@c
  1215  0754  08B0               	movf	sprintf@c,f
  1216  0755  1903               	btfsc	3,2
  1217  0756  2FF8               	goto	l1096
  1218                           
  1219                           ;doprnt.c: 547: if(c != '%')
  1220  0757  0830               	movf	sprintf@c,w
  1221  0758  3A25               	xorlw	37
  1222  0759  1903               	skipnz
  1223  075A  2F67               	goto	l1050
  1224                           
  1225                           ;doprnt.c: 549: {
  1226                           ;doprnt.c: 550: ((*sp++ = (c)));
  1227  075B  0830               	movf	sprintf@c,w
  1228  075C  00A5               	movwf	??_sprintf
  1229  075D  082F               	movf	sprintf@sp,w
  1230  075E  0084               	movwf	4
  1231  075F  0825               	movf	??_sprintf,w
  1232  0760  1383               	bcf	3,7	;select IRP bank0
  1233  0761  0080               	movwf	0
  1234  0762  3001               	movlw	1
  1235  0763  00A5               	movwf	??_sprintf
  1236  0764  0825               	movf	??_sprintf,w
  1237  0765  07AF               	addwf	sprintf@sp,f
  1238                           
  1239                           ;doprnt.c: 551: continue;
  1240  0766  2F4B               	goto	l1094
  1241  0767                     l1050:	
  1242                           
  1243                           ;doprnt.c: 552: }
  1244                           ;doprnt.c: 557: flag = 0;
  1245  0767  01A9               	clrf	sprintf@flag
  1246                           
  1247                           ;doprnt.c: 831: }
  1248                           
  1249                           ;doprnt.c: 822: continue;
  1250                           
  1251                           ;doprnt.c: 811: default:
  1252                           
  1253                           ;doprnt.c: 707: case 'i':
  1254                           ;doprnt.c: 708: break;
  1255                           
  1256                           ;doprnt.c: 706: case 'd':
  1257                           
  1258                           ;doprnt.c: 647: goto alldone;
  1259                           
  1260                           ;doprnt.c: 646: case 0:
  1261                           
  1262                           ;doprnt.c: 644: switch(c = *f++) {
  1263  0768  3001               	movlw	1
  1264  0769  07A0               	addwf	sprintf@f,f
  1265  076A  30FF               	movlw	-1
  1266  076B  0720               	addwf	sprintf@f,w
  1267  076C  0084               	movwf	4
  1268  076D  200B               	fcall	stringdir
  1269  076E  00B0               	movwf	sprintf@c
  1270                           
  1271                           ; Switch size 1, requested type "space"
  1272                           ; Number of cases is 3, Range of values is 0 to 105
  1273                           ; switch strategies available:
  1274                           ; Name         Instructions Cycles
  1275                           ; simple_byte           10     6 (average)
  1276                           ; direct_byte          112     6 (fixed)
  1277                           ; jumptable            260     6 (fixed)
  1278                           ;	Chosen strategy is simple_byte
  1279  076F  3A00               	xorlw	0	; case 0
  1280  0770  1903               	skipnz
  1281  0771  2FF8               	goto	l1096
  1282  0772  3A64               	xorlw	100	; case 100
  1283  0773  1903               	skipnz
  1284  0774  2F79               	goto	l1056
  1285  0775  3A0D               	xorlw	13	; case 105
  1286  0776  1903               	skipnz
  1287  0777  2F79               	goto	l1056
  1288  0778  2F4B               	goto	l1094
  1289  0779                     l1056:	
  1290                           
  1291                           ;doprnt.c: 1262: {
  1292                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1293  0779  0828               	movf	sprintf@ap,w
  1294  077A  0084               	movwf	4
  1295  077B  1383               	bcf	3,7	;select IRP bank0
  1296  077C  0800               	movf	0,w
  1297  077D  00AB               	movwf	sprintf@_val
  1298  077E  0A84               	incf	4,f
  1299  077F  0800               	movf	0,w
  1300  0780  00AC               	movwf	sprintf@_val+1
  1301  0781  3002               	movlw	2
  1302  0782  00A5               	movwf	??_sprintf
  1303  0783  0825               	movf	??_sprintf,w
  1304  0784  07A8               	addwf	sprintf@ap,f
  1305                           
  1306                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  1307  0785  1FAC               	btfss	sprintf@_val+1,7
  1308  0786  2F90               	goto	l1066
  1309                           
  1310                           ;doprnt.c: 1271: flag |= 0x03;
  1311  0787  3003               	movlw	3
  1312  0788  00A5               	movwf	??_sprintf
  1313  0789  0825               	movf	??_sprintf,w
  1314  078A  04A9               	iorwf	sprintf@flag,f
  1315                           
  1316                           ;doprnt.c: 1272: _val._val = -_val._val;
  1317  078B  09AB               	comf	sprintf@_val,f
  1318  078C  09AC               	comf	sprintf@_val+1,f
  1319  078D  0AAB               	incf	sprintf@_val,f
  1320  078E  1903               	skipnz
  1321  078F  0AAC               	incf	sprintf@_val+1,f
  1322  0790                     l1066:	
  1323                           
  1324                           ;doprnt.c: 1273: }
  1325                           ;doprnt.c: 1275: }
  1326                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1327  0790  01B0               	clrf	sprintf@c
  1328  0791  0AB0               	incf	sprintf@c,f
  1329  0792  0830               	movf	sprintf@c,w
  1330  0793  3A05               	xorlw	5
  1331  0794  1903               	btfsc	3,2
  1332  0795  2FAF               	goto	l1078
  1333  0796                     l1070:	
  1334                           
  1335                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  1336  0796  0830               	movf	sprintf@c,w
  1337  0797  00A5               	movwf	??_sprintf
  1338  0798  0725               	addwf	??_sprintf,w
  1339  0799  3E01               	addlw	low (_dpowers-__stringbase)
  1340  079A  0084               	movwf	4
  1341  079B  200B               	fcall	stringdir
  1342  079C  00A6               	movwf	??_sprintf+1
  1343  079D  200B               	fcall	stringdir
  1344  079E  00A7               	movwf	??_sprintf+2
  1345  079F  0827               	movf	??_sprintf+2,w
  1346  07A0  022C               	subwf	sprintf@_val+1,w
  1347  07A1  1D03               	skipz
  1348  07A2  2FA5               	goto	u565
  1349  07A3  0826               	movf	??_sprintf+1,w
  1350  07A4  022B               	subwf	sprintf@_val,w
  1351  07A5                     u565:	
  1352  07A5  1C03               	btfss	3,0
  1353  07A6  2FAF               	goto	l1078
  1354                           
  1355                           ;doprnt.c: 1316: break;
  1356  07A7  3001               	movlw	1
  1357  07A8  00A5               	movwf	??_sprintf
  1358  07A9  0825               	movf	??_sprintf,w
  1359  07AA  07B0               	addwf	sprintf@c,f
  1360  07AB  0830               	movf	sprintf@c,w
  1361  07AC  3A05               	xorlw	5
  1362  07AD  1D03               	skipz
  1363  07AE  2F96               	goto	l1070
  1364  07AF                     l1078:	
  1365                           
  1366                           ;doprnt.c: 1431: {
  1367                           ;doprnt.c: 1447: if(flag & 0x03)
  1368  07AF  0829               	movf	sprintf@flag,w
  1369  07B0  3903               	andlw	3
  1370  07B1  1903               	btfsc	3,2
  1371  07B2  2FBE               	goto	l1084
  1372                           
  1373                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  1374  07B3  302D               	movlw	45
  1375  07B4  00A5               	movwf	??_sprintf
  1376  07B5  082F               	movf	sprintf@sp,w
  1377  07B6  0084               	movwf	4
  1378  07B7  0825               	movf	??_sprintf,w
  1379  07B8  1383               	bcf	3,7	;select IRP bank0
  1380  07B9  0080               	movwf	0
  1381  07BA  3001               	movlw	1
  1382  07BB  00A5               	movwf	??_sprintf
  1383  07BC  0825               	movf	??_sprintf,w
  1384  07BD  07AF               	addwf	sprintf@sp,f
  1385  07BE                     l1084:	
  1386                           
  1387                           ;doprnt.c: 1478: }
  1388                           ;doprnt.c: 1481: prec = c;
  1389  07BE  0830               	movf	sprintf@c,w
  1390  07BF  00A5               	movwf	??_sprintf
  1391  07C0  0825               	movf	??_sprintf,w
  1392  07C1  00AA               	movwf	sprintf@prec
  1393  07C2                     l1092:	
  1394                           ;doprnt.c: 1483: while(prec--) {
  1395                           
  1396  07C2  30FF               	movlw	-1
  1397  07C3  00A5               	movwf	??_sprintf
  1398  07C4  0825               	movf	??_sprintf,w
  1399  07C5  07AA               	addwf	sprintf@prec,f
  1400  07C6  082A               	movf	sprintf@prec,w
  1401  07C7  3AFF               	xorlw	-1
  1402  07C8  1903               	btfsc	3,2
  1403  07C9  2F4B               	goto	l1094
  1404                           
  1405                           ;doprnt.c: 1487: {
  1406                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  1407  07CA  300A               	movlw	10
  1408  07CB  00F8               	movwf	___lwmod@divisor
  1409  07CC  3000               	movlw	0
  1410  07CD  00F9               	movwf	___lwmod@divisor+1
  1411  07CE  082A               	movf	sprintf@prec,w
  1412  07CF  00A5               	movwf	??_sprintf
  1413  07D0  0725               	addwf	??_sprintf,w
  1414  07D1  3E01               	addlw	low (_dpowers-__stringbase)
  1415  07D2  0084               	movwf	4
  1416  07D3  200B               	fcall	stringdir
  1417  07D4  00F0               	movwf	___lwdiv@divisor
  1418  07D5  200B               	fcall	stringdir
  1419  07D6  00F1               	movwf	___lwdiv@divisor+1
  1420  07D7  082C               	movf	sprintf@_val+1,w
  1421  07D8  01F3               	clrf	___lwdiv@dividend+1
  1422  07D9  07F3               	addwf	___lwdiv@dividend+1,f
  1423  07DA  082B               	movf	sprintf@_val,w
  1424  07DB  01F2               	clrf	___lwdiv@dividend
  1425  07DC  07F2               	addwf	___lwdiv@dividend,f
  1426  07DD  265F               	fcall	___lwdiv
  1427  07DE  0871               	movf	?___lwdiv+1,w
  1428  07DF  01FB               	clrf	___lwmod@dividend+1
  1429  07E0  07FB               	addwf	___lwmod@dividend+1,f
  1430  07E1  0870               	movf	?___lwdiv,w
  1431  07E2  01FA               	clrf	___lwmod@dividend
  1432  07E3  07FA               	addwf	___lwmod@dividend,f
  1433  07E4  25F0               	fcall	___lwmod
  1434  07E5  0878               	movf	?___lwmod,w
  1435  07E6  3E30               	addlw	48
  1436  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  1437  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  1438  07E9  00A6               	movwf	??_sprintf+1
  1439  07EA  0826               	movf	??_sprintf+1,w
  1440  07EB  00B0               	movwf	sprintf@c
  1441                           
  1442                           ;doprnt.c: 1532: }
  1443                           ;doprnt.c: 1533: ((*sp++ = (c)));
  1444  07EC  0830               	movf	sprintf@c,w
  1445  07ED  00A5               	movwf	??_sprintf
  1446  07EE  082F               	movf	sprintf@sp,w
  1447  07EF  0084               	movwf	4
  1448  07F0  0825               	movf	??_sprintf,w
  1449  07F1  1383               	bcf	3,7	;select IRP bank0
  1450  07F2  0080               	movwf	0
  1451  07F3  3001               	movlw	1
  1452  07F4  00A5               	movwf	??_sprintf
  1453  07F5  0825               	movf	??_sprintf,w
  1454  07F6  07AF               	addwf	sprintf@sp,f
  1455  07F7  2FC2               	goto	l1092
  1456  07F8                     l1096:	
  1457                           ;doprnt.c: 1534: }
  1458                           ;doprnt.c: 1542: }
  1459                           ;doprnt.c: 1544: alldone:
  1460                           
  1461                           
  1462                           ;doprnt.c: 1547: *sp = 0;
  1463  07F8  082F               	movf	sprintf@sp,w
  1464  07F9  0084               	movwf	4
  1465  07FA  1383               	bcf	3,7	;select IRP bank0
  1466  07FB  0180               	clrf	0
  1467  07FC  0008               	return
  1468  07FD                     __end_of_sprintf:	
  1469                           ;doprnt.c: 1549: return 0;
  1470                           ;	Return value of _sprintf is never used
  1471                           
  1472                           
  1473                           	psect	text6
  1474  05F0                     __ptext6:	
  1475 ;; *************** function ___lwmod *****************
  1476 ;; Defined at:
  1477 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  divisor         2    8[COMMON] unsigned int 
  1480 ;;  dividend        2   10[COMMON] unsigned int 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  counter         1   13[COMMON] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  2    8[COMMON] unsigned int 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2, status,0
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1492 ;;      Params:         4       0       0       0
  1493 ;;      Locals:         1       0       0       0
  1494 ;;      Temps:          1       0       0       0
  1495 ;;      Totals:         6       0       0       0
  1496 ;;Total ram usage:        6 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_sprintf
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           
  1506                           ;psect for function ___lwmod
  1507  05F0                     ___lwmod:	
  1508                           
  1509                           ;incstack = 0
  1510                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1511  05F0  0879               	movf	___lwmod@divisor+1,w
  1512  05F1  0478               	iorwf	___lwmod@divisor,w
  1513  05F2  1903               	skipnz
  1514  05F3  2E1D               	goto	l1038
  1515  05F4  01FD               	clrf	___lwmod@counter
  1516  05F5  0AFD               	incf	___lwmod@counter,f
  1517  05F6                     l1028:	
  1518  05F6  1BF9               	btfsc	___lwmod@divisor+1,7
  1519  05F7  2E04               	goto	l1030
  1520  05F8  3001               	movlw	1
  1521  05F9                     u485:	
  1522  05F9  1003               	clrc
  1523  05FA  0DF8               	rlf	___lwmod@divisor,f
  1524  05FB  0DF9               	rlf	___lwmod@divisor+1,f
  1525  05FC  3EFF               	addlw	-1
  1526  05FD  1D03               	skipz
  1527  05FE  2DF9               	goto	u485
  1528  05FF  3001               	movlw	1
  1529  0600  00FC               	movwf	??___lwmod
  1530  0601  087C               	movf	??___lwmod,w
  1531  0602  07FD               	addwf	___lwmod@counter,f
  1532  0603  2DF6               	goto	l1028
  1533  0604                     l1030:	
  1534  0604  0879               	movf	___lwmod@divisor+1,w
  1535  0605  027B               	subwf	___lwmod@dividend+1,w
  1536  0606  1D03               	skipz
  1537  0607  2E0A               	goto	u505
  1538  0608  0878               	movf	___lwmod@divisor,w
  1539  0609  027A               	subwf	___lwmod@dividend,w
  1540  060A                     u505:	
  1541  060A  1C03               	skipc
  1542  060B  2E12               	goto	l1034
  1543  060C  0878               	movf	___lwmod@divisor,w
  1544  060D  02FA               	subwf	___lwmod@dividend,f
  1545  060E  0879               	movf	___lwmod@divisor+1,w
  1546  060F  1C03               	skipc
  1547  0610  03FB               	decf	___lwmod@dividend+1,f
  1548  0611  02FB               	subwf	___lwmod@dividend+1,f
  1549  0612                     l1034:	
  1550  0612  3001               	movlw	1
  1551  0613                     u515:	
  1552  0613  1003               	clrc
  1553  0614  0CF9               	rrf	___lwmod@divisor+1,f
  1554  0615  0CF8               	rrf	___lwmod@divisor,f
  1555  0616  3EFF               	addlw	-1
  1556  0617  1D03               	skipz
  1557  0618  2E13               	goto	u515
  1558  0619  3001               	movlw	1
  1559  061A  02FD               	subwf	___lwmod@counter,f
  1560  061B  1D03               	btfss	3,2
  1561  061C  2E04               	goto	l1030
  1562  061D                     l1038:	
  1563  061D  087B               	movf	___lwmod@dividend+1,w
  1564  061E  01F9               	clrf	?___lwmod+1
  1565  061F  07F9               	addwf	?___lwmod+1,f
  1566  0620  087A               	movf	___lwmod@dividend,w
  1567  0621  01F8               	clrf	?___lwmod
  1568  0622  07F8               	addwf	?___lwmod,f
  1569  0623  0008               	return
  1570  0624                     __end_of___lwmod:	
  1571                           
  1572                           	psect	text7
  1573  065F                     __ptext7:	
  1574 ;; *************** function ___lwdiv *****************
  1575 ;; Defined at:
  1576 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  divisor         2    0[COMMON] unsigned int 
  1579 ;;  dividend        2    2[COMMON] unsigned int 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  quotient        2    5[COMMON] unsigned int 
  1582 ;;  counter         1    7[COMMON] unsigned char 
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  2    0[COMMON] unsigned int 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2, status,0
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1592 ;;      Params:         4       0       0       0
  1593 ;;      Locals:         3       0       0       0
  1594 ;;      Temps:          1       0       0       0
  1595 ;;      Totals:         8       0       0       0
  1596 ;;Total ram usage:        8 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_sprintf
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function ___lwdiv
  1607  065F                     ___lwdiv:	
  1608                           
  1609                           ;incstack = 0
  1610                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1611  065F  01F5               	clrf	___lwdiv@quotient
  1612  0660  01F6               	clrf	___lwdiv@quotient+1
  1613  0661  0871               	movf	___lwdiv@divisor+1,w
  1614  0662  0470               	iorwf	___lwdiv@divisor,w
  1615  0663  1903               	skipnz
  1616  0664  2E96               	goto	l996
  1617  0665  01F7               	clrf	___lwdiv@counter
  1618  0666  0AF7               	incf	___lwdiv@counter,f
  1619  0667                     l984:	
  1620  0667  1BF1               	btfsc	___lwdiv@divisor+1,7
  1621  0668  2E75               	goto	l986
  1622  0669  3001               	movlw	1
  1623  066A                     u385:	
  1624  066A  1003               	clrc
  1625  066B  0DF0               	rlf	___lwdiv@divisor,f
  1626  066C  0DF1               	rlf	___lwdiv@divisor+1,f
  1627  066D  3EFF               	addlw	-1
  1628  066E  1D03               	skipz
  1629  066F  2E6A               	goto	u385
  1630  0670  3001               	movlw	1
  1631  0671  00F4               	movwf	??___lwdiv
  1632  0672  0874               	movf	??___lwdiv,w
  1633  0673  07F7               	addwf	___lwdiv@counter,f
  1634  0674  2E67               	goto	l984
  1635  0675                     l986:	
  1636  0675  3001               	movlw	1
  1637  0676                     u405:	
  1638  0676  1003               	clrc
  1639  0677  0DF5               	rlf	___lwdiv@quotient,f
  1640  0678  0DF6               	rlf	___lwdiv@quotient+1,f
  1641  0679  3EFF               	addlw	-1
  1642  067A  1D03               	skipz
  1643  067B  2E76               	goto	u405
  1644  067C  0871               	movf	___lwdiv@divisor+1,w
  1645  067D  0273               	subwf	___lwdiv@dividend+1,w
  1646  067E  1D03               	skipz
  1647  067F  2E82               	goto	u415
  1648  0680  0870               	movf	___lwdiv@divisor,w
  1649  0681  0272               	subwf	___lwdiv@dividend,w
  1650  0682                     u415:	
  1651  0682  1C03               	skipc
  1652  0683  2E8B               	goto	l992
  1653  0684  0870               	movf	___lwdiv@divisor,w
  1654  0685  02F2               	subwf	___lwdiv@dividend,f
  1655  0686  0871               	movf	___lwdiv@divisor+1,w
  1656  0687  1C03               	skipc
  1657  0688  03F3               	decf	___lwdiv@dividend+1,f
  1658  0689  02F3               	subwf	___lwdiv@dividend+1,f
  1659  068A  1475               	bsf	___lwdiv@quotient,0
  1660  068B                     l992:	
  1661  068B  3001               	movlw	1
  1662  068C                     u425:	
  1663  068C  1003               	clrc
  1664  068D  0CF1               	rrf	___lwdiv@divisor+1,f
  1665  068E  0CF0               	rrf	___lwdiv@divisor,f
  1666  068F  3EFF               	addlw	-1
  1667  0690  1D03               	skipz
  1668  0691  2E8C               	goto	u425
  1669  0692  3001               	movlw	1
  1670  0693  02F7               	subwf	___lwdiv@counter,f
  1671  0694  1D03               	btfss	3,2
  1672  0695  2E75               	goto	l986
  1673  0696                     l996:	
  1674  0696  0876               	movf	___lwdiv@quotient+1,w
  1675  0697  01F1               	clrf	?___lwdiv+1
  1676  0698  07F1               	addwf	?___lwdiv+1,f
  1677  0699  0875               	movf	___lwdiv@quotient,w
  1678  069A  01F0               	clrf	?___lwdiv
  1679  069B  07F0               	addwf	?___lwdiv,f
  1680  069C  0008               	return
  1681  069D                     __end_of___lwdiv:	
  1682                           
  1683                           	psect	text8
  1684  0574                     __ptext8:	
  1685 ;; *************** function _hd44780_printstr *****************
  1686 ;; Defined at:
  1687 ;;		line 96 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\hd44780.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  dta             2    5[COMMON] PTR unsigned char 
  1690 ;;		 -> hd44780_printdecimal@buff(10), hd44780_printint@buff(5), main@buff(25), STR_3(2), 
  1691 ;;		 -> STR_1(11), 
  1692 ;;  loc             1    7[COMMON] unsigned char 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;		None               void
  1697 ;; Registers used:
  1698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1704 ;;      Params:         3       0       0       0
  1705 ;;      Locals:         0       0       0       0
  1706 ;;      Temps:          0       0       0       0
  1707 ;;      Totals:         3       0       0       0
  1708 ;;Total ram usage:        3 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    3
  1711 ;; This function calls:
  1712 ;;		_hd44780_char
  1713 ;;		_hd44780_newline
  1714 ;;		_hd44780_write
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;;		_hd44780_printint
  1718 ;;		_hd44780_printdecimal
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           
  1723                           ;psect for function _hd44780_printstr
  1724  0574                     _hd44780_printstr:	
  1725                           
  1726                           ;hd44780.c: 100: hd44780_write( 0x80 | loc );
  1727                           
  1728                           ;incstack = 0
  1729                           ; Regs used in _hd44780_printstr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1730  0574  0877               	movf	hd44780_printstr@loc,w
  1731  0575  3880               	iorlw	128
  1732  0576  25BF               	fcall	_hd44780_write
  1733  0577                     l1186:	
  1734                           ;hd44780.c: 102: while( *dta != '\0' ){
  1735                           
  1736  0577  0876               	movf	hd44780_printstr@dta+1,w
  1737  0578  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0579  1303               	bcf	3,6	;RP1=0, select bank0
  1739  057A  00FF               	movwf	127
  1740  057B  0875               	movf	hd44780_printstr@dta,w
  1741  057C  0084               	movwf	4
  1742  057D  2001               	fcall	stringtab
  1743  057E  3800               	iorlw	0
  1744  057F  1903               	btfsc	3,2
  1745  0580  0008               	return
  1746                           
  1747                           ;hd44780.c: 103: if( *dta != '\n' ){
  1748  0581  0876               	movf	hd44780_printstr@dta+1,w
  1749  0582  1283               	bcf	3,5	;RP0=0, select bank0
  1750  0583  1303               	bcf	3,6	;RP1=0, select bank0
  1751  0584  00FF               	movwf	127
  1752  0585  0875               	movf	hd44780_printstr@dta,w
  1753  0586  0084               	movwf	4
  1754  0587  2001               	fcall	stringtab
  1755  0588  3A0A               	xorlw	10
  1756  0589  1903               	skipnz
  1757  058A  2D92               	goto	l1182
  1758                           
  1759                           ;hd44780.c: 104: hd44780_char( *dta );
  1760  058B  0876               	movf	hd44780_printstr@dta+1,w
  1761  058C  00FF               	movwf	127
  1762  058D  0875               	movf	hd44780_printstr@dta,w
  1763  058E  0084               	movwf	4
  1764  058F  2001               	fcall	stringtab
  1765  0590  2501               	fcall	_hd44780_char
  1766                           
  1767                           ;hd44780.c: 105: }else{
  1768  0591  2D93               	goto	l1184
  1769  0592                     l1182:	
  1770                           
  1771                           ;hd44780.c: 107: hd44780_newline();
  1772  0592  24E5               	fcall	_hd44780_newline
  1773  0593                     l1184:	
  1774                           
  1775                           ;hd44780.c: 108: }
  1776                           ;hd44780.c: 110: dta++;
  1777  0593  3001               	movlw	1
  1778  0594  07F5               	addwf	hd44780_printstr@dta,f
  1779  0595  1803               	skipnc
  1780  0596  0AF6               	incf	hd44780_printstr@dta+1,f
  1781  0597  2D77               	goto	l1186
  1782  0598                     __end_of_hd44780_printstr:	
  1783                           
  1784                           	psect	text9
  1785  04E5                     __ptext9:	
  1786 ;; *************** function _hd44780_newline *****************
  1787 ;; Defined at:
  1788 ;;		line 122 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\hd44780.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;		None               void
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0, pclath, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1802 ;;      Params:         0       0       0       0
  1803 ;;      Locals:         0       0       0       0
  1804 ;;      Temps:          0       0       0       0
  1805 ;;      Totals:         0       0       0       0
  1806 ;;Total ram usage:        0 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    2
  1809 ;; This function calls:
  1810 ;;		_hd44780_write
  1811 ;; This function is called by:
  1812 ;;		_hd44780_printstr
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           
  1817                           ;psect for function _hd44780_newline
  1818  04E5                     _hd44780_newline:	
  1819                           
  1820                           ;hd44780.c: 124: hd44780_write( 0xC0 );
  1821                           
  1822                           ;incstack = 0
  1823                           ; Regs used in _hd44780_newline: [wreg+status,2+status,0+pclath+cstack]
  1824  04E5  30C0               	movlw	192
  1825  04E6  25BF               	fcall	_hd44780_write
  1826  04E7  0008               	return
  1827  04E8                     __end_of_hd44780_newline:	
  1828                           
  1829                           	psect	text10
  1830  04E8                     __ptext10:	
  1831 ;; *************** function _hd44780_printchr *****************
  1832 ;; Defined at:
  1833 ;;		line 114 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\hd44780.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  dta             1    wreg     unsigned char 
  1836 ;;  loc             1    5[COMMON] unsigned char 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  dta             1    6[COMMON] unsigned char 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;		None               void
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0, pclath, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1848 ;;      Params:         1       0       0       0
  1849 ;;      Locals:         1       0       0       0
  1850 ;;      Temps:          0       0       0       0
  1851 ;;      Totals:         2       0       0       0
  1852 ;;Total ram usage:        2 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    3
  1855 ;; This function calls:
  1856 ;;		_hd44780_char
  1857 ;;		_hd44780_write
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           
  1864                           ;psect for function _hd44780_printchr
  1865  04E8                     _hd44780_printchr:	
  1866                           
  1867                           ;incstack = 0
  1868                           ; Regs used in _hd44780_printchr: [wreg+status,2+status,0+pclath+cstack]
  1869                           ;hd44780_printchr@dta stored from wreg
  1870  04E8  00F6               	movwf	hd44780_printchr@dta
  1871                           
  1872                           ;hd44780.c: 117: hd44780_write( 0x80 | loc );
  1873  04E9  0875               	movf	hd44780_printchr@loc,w
  1874  04EA  3880               	iorlw	128
  1875  04EB  25BF               	fcall	_hd44780_write
  1876                           
  1877                           ;hd44780.c: 119: hd44780_char( dta );
  1878  04EC  0876               	movf	hd44780_printchr@dta,w
  1879  04ED  2501               	fcall	_hd44780_char
  1880  04EE  0008               	return
  1881  04EF                     __end_of_hd44780_printchr:	
  1882                           
  1883                           	psect	text11
  1884  04E2                     __ptext11:	
  1885 ;; *************** function _hd44780_clear *****************
  1886 ;; Defined at:
  1887 ;;		line 189 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\hd44780.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;		None               void
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1901 ;;      Params:         0       0       0       0
  1902 ;;      Locals:         0       0       0       0
  1903 ;;      Temps:          0       0       0       0
  1904 ;;      Totals:         0       0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    2
  1908 ;; This function calls:
  1909 ;;		_hd44780_write
  1910 ;; This function is called by:
  1911 ;;		_main
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function _hd44780_clear
  1917  04E2                     _hd44780_clear:	
  1918                           
  1919                           ;hd44780.c: 192: hd44780_write( 0b00000001 );
  1920                           
  1921                           ;incstack = 0
  1922                           ; Regs used in _hd44780_clear: [wreg+status,2+status,0+pclath+cstack]
  1923  04E2  3001               	movlw	1
  1924  04E3  25BF               	fcall	_hd44780_write
  1925  04E4  0008               	return
  1926  04E5                     __end_of_hd44780_clear:	
  1927                           
  1928                           	psect	text12
  1929  053B                     __ptext12:	
  1930 ;; *************** function _hd44780_block_erase *****************
  1931 ;; Defined at:
  1932 ;;		line 195 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\hd44780.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  start_loc       1    wreg     unsigned char 
  1935 ;;  length          1    5[COMMON] unsigned char 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  start_loc       1    7[COMMON] unsigned char 
  1938 ;;  i               2    8[COMMON] int 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;		None               void
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0, pclath, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1948 ;;      Params:         1       0       0       0
  1949 ;;      Locals:         3       0       0       0
  1950 ;;      Temps:          1       0       0       0
  1951 ;;      Totals:         5       0       0       0
  1952 ;;Total ram usage:        5 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    3
  1955 ;; This function calls:
  1956 ;;		_hd44780_char
  1957 ;;		_hd44780_write
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           
  1964                           ;psect for function _hd44780_block_erase
  1965  053B                     _hd44780_block_erase:	
  1966                           
  1967                           ;incstack = 0
  1968                           ; Regs used in _hd44780_block_erase: [wreg+status,2+status,0+pclath+cstack]
  1969                           ;hd44780_block_erase@start_loc stored from wreg
  1970  053B  00F7               	movwf	hd44780_block_erase@start_loc
  1971                           
  1972                           ;hd44780.c: 197: int i;
  1973                           ;hd44780.c: 200: for(i=0;i<length;i++){
  1974  053C  01F8               	clrf	hd44780_block_erase@i
  1975  053D  01F9               	clrf	hd44780_block_erase@i+1
  1976  053E                     l1196:	
  1977  053E  0879               	movf	hd44780_block_erase@i+1,w
  1978  053F  3A80               	xorlw	128
  1979  0540  00F6               	movwf	??_hd44780_block_erase
  1980  0541  3080               	movlw	128
  1981  0542  0276               	subwf	??_hd44780_block_erase,w
  1982  0543  1D03               	skipz
  1983  0544  2D47               	goto	u665
  1984  0545  0875               	movf	hd44780_block_erase@length,w
  1985  0546  0278               	subwf	hd44780_block_erase@i,w
  1986  0547                     u665:	
  1987  0547  1803               	btfsc	3,0
  1988  0548  0008               	return
  1989                           
  1990                           ;hd44780.c: 201: hd44780_write( 0x80 | (start_loc+i) );
  1991  0549  0878               	movf	hd44780_block_erase@i,w
  1992  054A  0777               	addwf	hd44780_block_erase@start_loc,w
  1993  054B  3880               	iorlw	128
  1994  054C  25BF               	fcall	_hd44780_write
  1995                           
  1996                           ;hd44780.c: 203: hd44780_char( ' ' );
  1997  054D  3020               	movlw	32
  1998  054E  2501               	fcall	_hd44780_char
  1999  054F  3001               	movlw	1
  2000  0550  07F8               	addwf	hd44780_block_erase@i,f
  2001  0551  1803               	skipnc
  2002  0552  0AF9               	incf	hd44780_block_erase@i+1,f
  2003  0553  3000               	movlw	0
  2004  0554  07F9               	addwf	hd44780_block_erase@i+1,f
  2005  0555  2D3E               	goto	l1196
  2006  0556                     __end_of_hd44780_block_erase:	
  2007                           
  2008                           	psect	text13
  2009  0501                     __ptext13:	
  2010 ;; *************** function _hd44780_char *****************
  2011 ;; Defined at:
  2012 ;;		line 70 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\hd44780.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  bt              1    wreg     unsigned char 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  bt              1    4[COMMON] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;		None               void
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0, pclath, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2026 ;;      Params:         0       0       0       0
  2027 ;;      Locals:         1       0       0       0
  2028 ;;      Temps:          0       0       0       0
  2029 ;;      Totals:         1       0       0       0
  2030 ;;Total ram usage:        1 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    2
  2033 ;; This function calls:
  2034 ;;		_hd44780_write
  2035 ;; This function is called by:
  2036 ;;		_hd44780_printstr
  2037 ;;		_hd44780_printchr
  2038 ;;		_hd44780_block_erase
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           
  2043                           ;psect for function _hd44780_char
  2044  0501                     _hd44780_char:	
  2045                           
  2046                           ;incstack = 0
  2047                           ; Regs used in _hd44780_char: [wreg+status,2+status,0+pclath+cstack]
  2048                           ;hd44780_char@bt stored from wreg
  2049  0501  00F4               	movwf	hd44780_char@bt
  2050                           
  2051                           ;hd44780.c: 73: RB5 = 1;
  2052  0502  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0503  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0504  1686               	bsf	6,5	;volatile
  2055                           
  2056                           ;hd44780.c: 74: rs_flag = 1;
  2057  0505  1462               	bsf	_rs_flag/(0+8),_rs_flag& (0+7)
  2058                           
  2059                           ;hd44780.c: 75: hd44780_write( bt );
  2060  0506  0874               	movf	hd44780_char@bt,w
  2061  0507  25BF               	fcall	_hd44780_write
  2062                           
  2063                           ;hd44780.c: 76: RB5 = 0;
  2064  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2065  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2066  050A  1286               	bcf	6,5	;volatile
  2067                           
  2068                           ;hd44780.c: 77: rs_flag = 0;
  2069  050B  1062               	bcf	_rs_flag/(0+8),_rs_flag& (0+7)
  2070  050C  0008               	return
  2071  050D                     __end_of_hd44780_char:	
  2072                           
  2073                           	psect	text14
  2074  05BF                     __ptext14:	
  2075 ;; *************** function _hd44780_write *****************
  2076 ;; Defined at:
  2077 ;;		line 41 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\hd44780.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  bt              1    wreg     unsigned char 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  bt              1    2[COMMON] unsigned char 
  2082 ;;  tmp             1    3[COMMON] unsigned char 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;		None               void
  2085 ;; Registers used:
  2086 ;;		wreg, status,2, status,0, pclath, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2092 ;;      Params:         0       0       0       0
  2093 ;;      Locals:         2       0       0       0
  2094 ;;      Temps:          2       0       0       0
  2095 ;;      Totals:         4       0       0       0
  2096 ;;Total ram usage:        4 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    1
  2099 ;; This function calls:
  2100 ;;		_hd44780_busy
  2101 ;;		_hd44780_pulse
  2102 ;; This function is called by:
  2103 ;;		_hd44780_init
  2104 ;;		_hd44780_char
  2105 ;;		_hd44780_printstr
  2106 ;;		_hd44780_printchr
  2107 ;;		_hd44780_newline
  2108 ;;		_hd44780_clear
  2109 ;;		_hd44780_block_erase
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           
  2114                           ;psect for function _hd44780_write
  2115  05BF                     _hd44780_write:	
  2116                           
  2117                           ;incstack = 0
  2118                           ; Regs used in _hd44780_write: [wreg+status,2+status,0+pclath+cstack]
  2119                           ;hd44780_write@bt stored from wreg
  2120  05BF  00F2               	movwf	hd44780_write@bt
  2121                           
  2122                           ;hd44780.c: 43: unsigned char tmp;
  2123                           ;hd44780.c: 45: tmp = bt & 0xF0;
  2124  05C0  0872               	movf	hd44780_write@bt,w
  2125  05C1  39F0               	andlw	240
  2126  05C2  00F0               	movwf	??_hd44780_write
  2127  05C3  0870               	movf	??_hd44780_write,w
  2128  05C4  00F3               	movwf	hd44780_write@tmp
  2129                           
  2130                           ;hd44780.c: 46: tmp = tmp >> 4;
  2131  05C5  0873               	movf	hd44780_write@tmp,w
  2132  05C6  00F0               	movwf	??_hd44780_write
  2133  05C7  3004               	movlw	4
  2134  05C8                     u615:	
  2135  05C8  1003               	clrc
  2136  05C9  0CF0               	rrf	??_hd44780_write,f
  2137  05CA  3EFF               	addlw	-1
  2138  05CB  1D03               	skipz
  2139  05CC  2DC8               	goto	u615
  2140  05CD  0870               	movf	??_hd44780_write,w
  2141  05CE  00F1               	movwf	??_hd44780_write+1
  2142  05CF  0871               	movf	??_hd44780_write+1,w
  2143  05D0  00F3               	movwf	hd44780_write@tmp
  2144                           
  2145                           ;hd44780.c: 48: if(rs_flag == 1){
  2146  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  2147  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  2148  05D3  1C62               	btfss	_rs_flag/(0+8),_rs_flag& (0+7)
  2149  05D4  2DDA               	goto	l1108
  2150                           
  2151                           ;hd44780.c: 49: tmp = tmp | 0x20;
  2152  05D5  0873               	movf	hd44780_write@tmp,w
  2153  05D6  3820               	iorlw	32
  2154  05D7  00F0               	movwf	??_hd44780_write
  2155  05D8  0870               	movf	??_hd44780_write,w
  2156  05D9  00F3               	movwf	hd44780_write@tmp
  2157  05DA                     l1108:	
  2158                           
  2159                           ;hd44780.c: 50: }
  2160                           ;hd44780.c: 51: PORTB = tmp;
  2161  05DA  0873               	movf	hd44780_write@tmp,w
  2162  05DB  0086               	movwf	6	;volatile
  2163                           
  2164                           ;hd44780.c: 53: hd44780_pulse();
  2165  05DC  24EF               	fcall	_hd44780_pulse
  2166                           
  2167                           ;hd44780.c: 55: tmp = bt & 0x0F;
  2168  05DD  0872               	movf	hd44780_write@bt,w
  2169  05DE  390F               	andlw	15
  2170  05DF  00F0               	movwf	??_hd44780_write
  2171  05E0  0870               	movf	??_hd44780_write,w
  2172  05E1  00F3               	movwf	hd44780_write@tmp
  2173                           
  2174                           ;hd44780.c: 57: if(rs_flag == 1){
  2175  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2176  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2177  05E4  1C62               	btfss	_rs_flag/(0+8),_rs_flag& (0+7)
  2178  05E5  2DEB               	goto	l1118
  2179                           
  2180                           ;hd44780.c: 58: tmp = tmp | 0x20;
  2181  05E6  0873               	movf	hd44780_write@tmp,w
  2182  05E7  3820               	iorlw	32
  2183  05E8  00F0               	movwf	??_hd44780_write
  2184  05E9  0870               	movf	??_hd44780_write,w
  2185  05EA  00F3               	movwf	hd44780_write@tmp
  2186  05EB                     l1118:	
  2187                           
  2188                           ;hd44780.c: 59: }
  2189                           ;hd44780.c: 61: PORTB = tmp;
  2190  05EB  0873               	movf	hd44780_write@tmp,w
  2191  05EC  0086               	movwf	6	;volatile
  2192                           
  2193                           ;hd44780.c: 63: hd44780_pulse();
  2194  05ED  24EF               	fcall	_hd44780_pulse
  2195                           
  2196                           ;hd44780.c: 67: hd44780_busy();
  2197  05EE  250D               	fcall	_hd44780_busy
  2198  05EF  0008               	return
  2199  05F0                     __end_of_hd44780_write:	
  2200                           
  2201                           	psect	text15
  2202  04EF                     __ptext15:	
  2203 ;; *************** function _hd44780_pulse *****************
  2204 ;; Defined at:
  2205 ;;		line 3 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\hd44780.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;		None
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;		None
  2210 ;; Return value:  Size  Location     Type
  2211 ;;		None               void
  2212 ;; Registers used:
  2213 ;;		None
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2219 ;;      Params:         0       0       0       0
  2220 ;;      Locals:         0       0       0       0
  2221 ;;      Temps:          0       0       0       0
  2222 ;;      Totals:         0       0       0       0
  2223 ;;Total ram usage:        0 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; This function calls:
  2226 ;;		Nothing
  2227 ;; This function is called by:
  2228 ;;		_hd44780_init
  2229 ;;		_hd44780_write
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _hd44780_pulse
  2235  04EF                     _hd44780_pulse:	
  2236                           
  2237                           ;hd44780.c: 5: RB4 = 1;
  2238                           
  2239                           ;incstack = 0
  2240                           ; Regs used in _hd44780_pulse: []
  2241  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  2242  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  2243  04F1  1606               	bsf	6,4	;volatile
  2244                           
  2245                           ;hd44780.c: 6: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2246  04F2  0000               	nop
  2247                           
  2248                           ;hd44780.c: 7: RB4 = 0;
  2249  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2250  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2251  04F5  1206               	bcf	6,4	;volatile
  2252  04F6  0008               	return
  2253  04F7                     __end_of_hd44780_pulse:	
  2254                           
  2255                           	psect	text16
  2256  050D                     __ptext16:	
  2257 ;; *************** function _hd44780_busy *****************
  2258 ;; Defined at:
  2259 ;;		line 80 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\hd44780.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;		None               void
  2266 ;; Registers used:
  2267 ;;		wreg, status,2
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2273 ;;      Params:         0       0       0       0
  2274 ;;      Locals:         0       0       0       0
  2275 ;;      Temps:          0       0       0       0
  2276 ;;      Totals:         0       0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_hd44780_init
  2283 ;;		_hd44780_write
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           
  2288                           ;psect for function _hd44780_busy
  2289  050D                     _hd44780_busy:	
  2290                           
  2291                           ;hd44780.c: 82: RB5 = 0;
  2292                           
  2293                           ;incstack = 0
  2294                           ; Regs used in _hd44780_busy: [wreg+status,2]
  2295  050D  1283               	bcf	3,5	;RP0=0, select bank0
  2296  050E  1303               	bcf	3,6	;RP1=0, select bank0
  2297  050F  1286               	bcf	6,5	;volatile
  2298                           
  2299                           ;hd44780.c: 83: rs_flag = 0;
  2300  0510  1062               	bcf	_rs_flag/(0+8),_rs_flag& (0+7)
  2301                           
  2302                           ;hd44780.c: 84: TRISB = 0x08;
  2303  0511  3008               	movlw	8
  2304  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2305  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2306  0514  0086               	movwf	6	;volatile
  2307                           
  2308                           ;hd44780.c: 85: RB6 = 1;
  2309  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2311  0517  1706               	bsf	6,6	;volatile
  2312                           
  2313                           ;hd44780.c: 86: RB4 = 1;
  2314  0518  1606               	bsf	6,4	;volatile
  2315  0519                     l90:	
  2316                           ;hd44780.c: 88: while( RB3 == 1 );
  2317                           
  2318  0519  1986               	btfsc	6,3	;volatile
  2319  051A  2D19               	goto	l90
  2320                           
  2321                           ;hd44780.c: 90: RB4 = 0;
  2322  051B  1206               	bcf	6,4	;volatile
  2323                           
  2324                           ;hd44780.c: 91: RB6 = 0;
  2325  051C  1306               	bcf	6,6	;volatile
  2326                           
  2327                           ;hd44780.c: 93: TRISB = 0x00;
  2328  051D  1683               	bsf	3,5	;RP0=1, select bank1
  2329  051E  1303               	bcf	3,6	;RP1=0, select bank1
  2330  051F  0186               	clrf	6	;volatile
  2331  0520  0008               	return
  2332  0521                     __end_of_hd44780_busy:	
  2333                           
  2334                           	psect	text17
  2335  0556                     __ptext17:	
  2336 ;; *************** function _debounce_read *****************
  2337 ;; Defined at:
  2338 ;;		line 7 in file "C:\Users\Dinusha\Documents\PICProjects\CProjects\LCD01\main.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  pin             1    wreg     unsigned char 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  pin             1    1[COMMON] unsigned char 
  2343 ;;  count           1    2[COMMON] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;		None               void
  2346 ;; Registers used:
  2347 ;;		wreg, status,2, status,0
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2353 ;;      Params:         0       0       0       0
  2354 ;;      Locals:         2       0       0       0
  2355 ;;      Temps:          1       0       0       0
  2356 ;;      Totals:         3       0       0       0
  2357 ;;Total ram usage:        3 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; This function calls:
  2360 ;;		Nothing
  2361 ;; This function is called by:
  2362 ;;		_main
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           
  2367                           ;psect for function _debounce_read
  2368  0556                     _debounce_read:	
  2369                           
  2370                           ;incstack = 0
  2371                           ; Regs used in _debounce_read: [wreg+status,2+status,0]
  2372                           ;debounce_read@pin stored from wreg
  2373  0556  00F1               	movwf	debounce_read@pin
  2374                           
  2375                           ;main.c: 9: char count = 0;
  2376  0557  01F2               	clrf	debounce_read@count
  2377                           
  2378                           ;main.c: 11: while( pin == 1 && count < 10 ){
  2379  0558  2D64               	goto	l1006
  2380  0559                     l1002:	
  2381                           
  2382                           ;main.c: 12: _delay((unsigned long)((1)*(4000000/4000.0)));
  2383  0559  30F9               	movlw	249
  2384  055A  00F0               	movwf	??_debounce_read
  2385  055B                     u757:	
  2386  055B  0000               	nop
  2387  055C  0BF0               	decfsz	??_debounce_read,f
  2388  055D  2D5B               	goto	u757
  2389  055E  2D5F               	nop2	;nop
  2390  055F  0000               	nop
  2391                           
  2392                           ;main.c: 13: count++;
  2393  0560  3001               	movlw	1
  2394  0561  00F0               	movwf	??_debounce_read
  2395  0562  0870               	movf	??_debounce_read,w
  2396  0563  07F2               	addwf	debounce_read@count,f
  2397  0564                     l1006:	
  2398  0564  0871               	movf	debounce_read@pin,w
  2399  0565  3A01               	xorlw	1
  2400  0566  1D03               	skipz
  2401  0567  2D6C               	goto	l1010
  2402  0568  300A               	movlw	10
  2403  0569  0272               	subwf	debounce_read@count,w
  2404  056A  1C03               	skipc
  2405  056B  2D59               	goto	l1002
  2406  056C                     l1010:	
  2407                           
  2408                           ;main.c: 14: }
  2409                           ;main.c: 17: return (count == 10) ? 1 : 0;
  2410  056C  0872               	movf	debounce_read@count,w
  2411  056D  3A0A               	xorlw	10
  2412  056E  1903               	skipnz
  2413  056F  2D72               	goto	l1014
  2414  0570  1003               	clrc
  2415  0571  0008               	return
  2416  0572                     l1014:	
  2417  0572  1403               	setc
  2418  0573  0008               	return
  2419  0574                     __end_of_debounce_read:	
  2420  007E                     btemp	set	126	;btemp
  2421  007E                     wtemp	set	126
  2422  007E                     wtemp0	set	126
  2423  0080                     wtemp1	set	128
  2424  0082                     wtemp2	set	130
  2425  0084                     wtemp3	set	132
  2426  0086                     wtemp4	set	134
  2427  0088                     wtemp5	set	136
  2428  007F                     wtemp6	set	127
  2429  007E                     ttemp	set	126
  2430  007E                     ttemp0	set	126
  2431  0081                     ttemp1	set	129
  2432  0084                     ttemp2	set	132
  2433  0087                     ttemp3	set	135
  2434  007F                     ttemp4	set	127
  2435  007E                     ltemp	set	126
  2436  007E                     ltemp0	set	126
  2437  0082                     ltemp1	set	130
  2438  0086                     ltemp2	set	134
  2439  0080                     ltemp3	set	128


Data Sizes:
    Strings     46
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     66      67
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_6(CODE[6]), STR_5(CODE[3]), STR_4(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 25
		 -> hd44780_printdecimal@buff(BANK0[10]), hd44780_printint@buff(BANK0[5]), main@buff(BANK0[25]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S188$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    hd44780_printstr@dta	PTR unsigned char  size(2) Largest target is 25
		 -> hd44780_printdecimal@buff(BANK0[10]), hd44780_printint@buff(BANK0[5]), main@buff(BANK0[25]), STR_3(CODE[2]), 
		 -> STR_1(CODE[11]), 

    main@text3	PTR unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), 

    main@text2	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[15]), 

    main@text	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _init->_hd44780_init
    _hd44780_init->_hd44780_write
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _hd44780_printstr->_hd44780_char
    _hd44780_newline->_hd44780_write
    _hd44780_printchr->_hd44780_char
    _hd44780_clear->_hd44780_write
    _hd44780_block_erase->_hd44780_char
    _hd44780_char->_hd44780_write

Critical Paths under _main in BANK0

    _main->_hd44780_printdecimal
    _hd44780_printint->_sprintf
    _hd44780_printdecimal->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0    9110
                                             33 BANK0     33    33      0
                      _debounce_read
                _hd44780_block_erase
                      _hd44780_clear
                   _hd44780_printchr
               _hd44780_printdecimal
                   _hd44780_printint
                   _hd44780_printstr
                               _init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     159
                       _hd44780_init
 ---------------------------------------------------------------------------------
 (2) _hd44780_init                                         2     2      0     159
                                              4 COMMON     2     2      0
                       _hd44780_busy
                      _hd44780_pulse
                      _hd44780_write
 ---------------------------------------------------------------------------------
 (1) _hd44780_printint                                     9     6      3    2573
                                             17 BANK0      9     6      3
                   _hd44780_printstr
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _hd44780_printdecimal                                16    11      5    2693
                                             17 BANK0     16    11      5
                      _debounce_read (ARG)
                   _hd44780_printstr
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    12      5    1250
                                              0 BANK0     17    12      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _hd44780_printstr                                     3     0      3    1118
                                              5 COMMON     3     0      3
                       _hd44780_char
                    _hd44780_newline
                      _hd44780_write
 ---------------------------------------------------------------------------------
 (2) _hd44780_newline                                      0     0      0     159
                      _hd44780_write
 ---------------------------------------------------------------------------------
 (1) _hd44780_printchr                                     2     1      1     437
                                              5 COMMON     2     1      1
                       _hd44780_char
                      _hd44780_write
 ---------------------------------------------------------------------------------
 (1) _hd44780_clear                                        0     0      0     159
                      _hd44780_write
 ---------------------------------------------------------------------------------
 (1) _hd44780_block_erase                                  5     4      1     483
                                              5 COMMON     5     4      1
                       _hd44780_char
                      _hd44780_write
 ---------------------------------------------------------------------------------
 (2) _hd44780_char                                         1     1      0     181
                                              4 COMMON     1     1      0
                      _hd44780_write
 ---------------------------------------------------------------------------------
 (3) _hd44780_write                                        4     4      0     159
                                              0 COMMON     4     4      0
                       _hd44780_busy
                      _hd44780_pulse
 ---------------------------------------------------------------------------------
 (4) _hd44780_pulse                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _hd44780_busy                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _debounce_read                                        3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _debounce_read
   _hd44780_block_erase
     _hd44780_char
       _hd44780_write
         _hd44780_busy
         _hd44780_pulse
     _hd44780_write
       _hd44780_busy
       _hd44780_pulse
   _hd44780_clear
     _hd44780_write
       _hd44780_busy
       _hd44780_pulse
   _hd44780_printchr
     _hd44780_char
       _hd44780_write
         _hd44780_busy
         _hd44780_pulse
     _hd44780_write
       _hd44780_busy
       _hd44780_pulse
   _hd44780_printdecimal
     _debounce_read (ARG)
     _hd44780_printstr (ARG)
       _hd44780_char
         _hd44780_write
           _hd44780_busy
           _hd44780_pulse
       _hd44780_newline
         _hd44780_write
           _hd44780_busy
           _hd44780_pulse
       _hd44780_write
         _hd44780_busy
         _hd44780_pulse
     _sprintf (ARG)
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _hd44780_printint
     _hd44780_printstr
       _hd44780_char
         _hd44780_write
           _hd44780_busy
           _hd44780_pulse
       _hd44780_newline
         _hd44780_write
           _hd44780_busy
           _hd44780_pulse
       _hd44780_write
         _hd44780_busy
         _hd44780_pulse
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _hd44780_printstr
     _hd44780_char
       _hd44780_write
         _hd44780_busy
         _hd44780_pulse
     _hd44780_newline
       _hd44780_write
         _hd44780_busy
         _hd44780_pulse
     _hd44780_write
       _hd44780_busy
       _hd44780_pulse
   _init
     _hd44780_init
       _hd44780_busy
       _hd44780_pulse
       _hd44780_write
         _hd44780_busy
         _hd44780_pulse
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     42      43       3       83.8%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      51       4        0.0%
BITBANK0            50      0       1       5        1.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      51      10        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun Mar 09 20:40:36 2014

                            pc 0002                    __CFG_CP$OFF 0000                             l45 0727  
                           l90 0519                 hd44780_char@bt 0074                             fsr 0004  
       __size_of_hd44780_clear 0003                            l992 068B                            l984 0667  
                          l986 0675                            l996 0696                            _RA1 0029  
                          _RB3 0033                            _RB4 0034                            _RB5 0035  
                          _RB6 0036                            u405 0676                            u415 0682  
                          u425 068C                            u505 060A                   __CFG_CPD$OFF 0000  
                          u515 0613                            u615 05C8                            u385 066A  
                          u705 0739                            u485 05F9                            u565 07A5  
                          u717 0717                            u727 062E                            u665 0547  
                          u737 063C                            u747 0647                            u757 055B  
                          u685 06F4         __size_of_hd44780_pulse 0008         __size_of_hd44780_write 0031  
                          fsr0 0004                            indf 0000                   __CFG_FOSC$XT 0000  
                 __CFG_LVP$OFF 0000                           l1010 056C                           l1002 0559  
                         l1014 0572                           l1006 0564                           l1030 0604  
                         l1034 0612                           l1050 0767                           l1108 05DA  
                         l1028 05F6                           l1204 05A1                           l1118 05EB  
                         l1038 061D                           l1070 0796                           l1056 0779  
                         l1066 0790                           l1242 072A                           l1234 06F6  
                         l1092 07C2                           l1084 07BE                           l1228 06E7  
                         l1182 0592                           l1078 07AF                           l1094 074B  
                         l1246 073B                           l1184 0593                           l1096 07F8  
                         l1186 0577                           l1196 053E         ??_hd44780_printdecimal 0036  
                         STR_1 0036                           STR_2 001B                           STR_3 0047  
                         STR_4 002A                           STR_5 0044                           STR_6 0041  
  __end_of_hd44780_block_erase 0556                           _main 069D                           _init 04F7  
                         btemp 007E                  __CFG_BOREN$ON 0000                           ltemp 007E  
                         start 0000                           ttemp 007E                           wtemp 007E  
                __CFG_MCLRE$ON 0000                hd44780_write@bt 0072                          ?_main 0070  
                        ?_init 0070                  __CFG_WDTE$OFF 0000                          _CMCON 001F  
         hd44780_block_erase@i 0078                __end_of___lwdiv 069D                __end_of___lwmod 0624  
                ?_hd44780_char 0070                  ?_hd44780_busy 0070                  ?_hd44780_init 0070  
                        _PORTB 0006                          _TRISA 0085                          _TRISB 0086  
     __size_of_hd44780_newline 0003                  __CFG_PWRTE$ON 0000                __end_of_dpowers 001B  
                        main@i 0060                          pclath 000A                          ltemp0 007E  
                        ltemp1 0082                          ltemp2 0086                          ltemp3 0080  
                        ttemp0 007E                          ttemp1 0081                          ttemp2 0084  
                        ttemp3 0087                          ttemp4 007F                  _hd44780_clear 04E2  
                        status 0003                          wtemp0 007E                          wtemp1 0080  
                        wtemp2 0082                          wtemp3 0084                          wtemp4 0086  
                        wtemp5 0088                          wtemp6 007F                __end_of_sprintf 07FD  
        __end_of_debounce_read 0574                  _hd44780_pulse 04EF                  _hd44780_write 05BF  
              __initialization 07FD            hd44780_printchr@dta 0076            hd44780_printchr@loc 0075  
                 __end_of_main 0744                   __end_of_init 0501            hd44780_printint@dta 0031  
          hd44780_printint@loc 0033                         ??_main 0041                         ??_init 0076  
               ??_hd44780_char 0074                 ??_hd44780_busy 0070                 ??_hd44780_init 0074  
          hd44780_printstr@dta 0075            hd44780_printstr@loc 0077               hd44780_write@tmp 0073  
               ?_hd44780_clear 0070                 ?_hd44780_pulse 0070                 ?_hd44780_write 0070  
      hd44780_printdecimal@loc 0035                      ??___lwdiv 0074                      ??___lwmod 007C  
     __end_of_hd44780_printchr 04EF       __end_of_hd44780_printint 053B       __end_of_hd44780_printstr 0598  
                    ??_sprintf 0025              ??_hd44780_newline 0074        __end_of__initialization 07FE  
               __pcstackCOMMON 0070           hd44780_printint@buff 0035                ??_hd44780_clear 0074  
 hd44780_block_erase@start_loc 0077                ??_hd44780_pulse 0070                ??_hd44780_write 0070  
         __end_of_hd44780_char 050D           __end_of_hd44780_busy 0521           __end_of_hd44780_init 065F  
                   __pmaintext 069D                     __stringtab 0001       hd44780_printdecimal@buff 0037  
__size_of_hd44780_printdecimal 0027   __size_of_hd44780_block_erase 001B                        ___lwdiv 065F  
                      ___lwmod 05F0                        __ptext1 04F7                        __ptext2 0624  
                      __ptext3 0521                        __ptext4 0598                        __ptext5 0744  
                      __ptext6 05F0                        __ptext7 065F                        __ptext8 0574  
                      __ptext9 04E5                        _dpowers 0011                        _rs_flag 0310  
    hd44780_block_erase@length 0075                        _sprintf 0744           end_of_initialization 07FE  
                    _PORTAbits 0005                _hd44780_newline 04E5         __size_of_debounce_read 001E  
            ?_hd44780_printchr 0075              ?_hd44780_printint 0031              ?_hd44780_printstr 0075  
           ??_hd44780_printchr 0076             ??_hd44780_printint 0034             ??_hd44780_printstr 0078  
        __size_of_hd44780_char 000C          __size_of_hd44780_busy 0014          __size_of_hd44780_init 003B  
        hd44780_printdecimal@d 0033          hd44780_printdecimal@i 0031                  __pbitbssBANK0 0310  
                 _hd44780_char 0501                   _hd44780_busy 050D                   _hd44780_init 0624  
          start_initialization 07FD             debounce_read@count 0072                  _debounce_read 0556  
      __end_of_hd44780_newline 04E8            _hd44780_block_erase 053B                      ___latbits 0000  
                __pcstackBANK0 0020            __end_of__stringdata 0049               debounce_read@pin 0071  
        __end_of_hd44780_clear 04E5                    sprintf@_val 002B                    sprintf@flag 0029  
        __end_of_hd44780_pulse 04F7                    sprintf@prec 002A          __end_of_hd44780_write 05F0  
               ?_debounce_read 0070           ?_hd44780_block_erase 0075               ___lwdiv@dividend 0072  
                     ?___lwdiv 0070                       ?___lwmod 0078   __end_of_hd44780_printdecimal 05BF  
                    __pstrings 0001               ___lwdiv@quotient 0075                       ?_sprintf 0020  
        ??_hd44780_block_erase 0076               ?_hd44780_newline 0070                    __stringbase 0010  
                  __stringdata 001B                      main@text2 005D                      main@text3 005F  
              ??_debounce_read 0070      __size_of_hd44780_printchr 0007      __size_of_hd44780_printint 001A  
    __size_of_hd44780_printstr 0024               __size_of___lwdiv 003E               __size_of___lwmod 0034  
           __end_of__stringtab 0011                ___lwdiv@divisor 0070                ___lwdiv@counter 0077  
                     __ptext10 04E8                       __ptext11 04E2                       __ptext12 053B  
                     __ptext13 0501                       __ptext14 05BF                       __ptext15 04EF  
                     __ptext16 050D                       __ptext17 0556               __size_of_sprintf 00B9  
         _hd44780_printdecimal 0598                  __size_of_main 00A7                  __size_of_init 000A  
                     main@buff 0044                       main@text 005E                      sprintf@ap 0028  
                    sprintf@sp 002F          ?_hd44780_printdecimal 0031               ___lwmod@dividend 007A  
                    stringcode 000B                       sprintf@c 0030                       sprintf@f 0020  
              ___lwmod@divisor 0078                ___lwmod@counter 007D                       stringdir 000B  
                     stringtab 0001               _hd44780_printchr 04E8               _hd44780_printint 0521  
             _hd44780_printstr 0574  
